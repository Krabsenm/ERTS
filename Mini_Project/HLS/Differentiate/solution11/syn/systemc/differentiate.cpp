// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "differentiate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic differentiate::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic differentiate::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> differentiate::ap_ST_fsm_state1 = "1";
const sc_lv<7> differentiate::ap_ST_fsm_state2 = "10";
const sc_lv<7> differentiate::ap_ST_fsm_state3 = "100";
const sc_lv<7> differentiate::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<7> differentiate::ap_ST_fsm_pp0_stage1 = "10000";
const sc_lv<7> differentiate::ap_ST_fsm_pp0_stage2 = "100000";
const sc_lv<7> differentiate::ap_ST_fsm_state13 = "1000000";
const sc_lv<32> differentiate::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool differentiate::ap_const_boolean_1 = true;
const int differentiate::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> differentiate::ap_const_lv32_5 = "101";
const bool differentiate::ap_const_boolean_0 = false;
const sc_lv<1> differentiate::ap_const_lv1_0 = "0";
const sc_lv<32> differentiate::ap_const_lv32_4 = "100";
const sc_lv<32> differentiate::ap_const_lv32_1 = "1";
const sc_lv<32> differentiate::ap_const_lv32_2 = "10";
const sc_lv<32> differentiate::ap_const_lv32_3 = "11";
const sc_lv<1> differentiate::ap_const_lv1_1 = "1";
const sc_lv<12> differentiate::ap_const_lv12_0 = "000000000000";
const sc_lv<32> differentiate::ap_const_lv32_6 = "110";
const sc_lv<6> differentiate::ap_const_lv6_1 = "1";
const sc_lv<15> differentiate::ap_const_lv15_0 = "000000000000000";
const sc_lv<2> differentiate::ap_const_lv2_0 = "00";
const sc_lv<12> differentiate::ap_const_lv12_B24 = "101100100100";
const sc_lv<12> differentiate::ap_const_lv12_1 = "1";
const sc_lv<6> differentiate::ap_const_lv6_2F = "101111";
const sc_lv<6> differentiate::ap_const_lv6_3F = "111111";
const sc_lv<2> differentiate::ap_const_lv2_3 = "11";
const sc_lv<2> differentiate::ap_const_lv2_1 = "1";
const sc_lv<6> differentiate::ap_const_lv6_0 = "000000";
const sc_lv<4> differentiate::ap_const_lv4_0 = "0000";
const sc_lv<5> differentiate::ap_const_lv5_2 = "10";
const sc_lv<5> differentiate::ap_const_lv5_1 = "1";
const sc_lv<32> differentiate::ap_const_lv32_E = "1110";
const sc_lv<12> differentiate::ap_const_lv12_2E = "101110";

differentiate::differentiate(sc_module_name name) : sc_module(name), mVcdFile(0) {
    differentiate_diff_io_s_axi_U = new differentiate_diff_io_s_axi<C_S_AXI_DIFF_IO_ADDR_WIDTH,C_S_AXI_DIFF_IO_DATA_WIDTH>("differentiate_diff_io_s_axi_U");
    differentiate_diff_io_s_axi_U->AWVALID(s_axi_diff_io_AWVALID);
    differentiate_diff_io_s_axi_U->AWREADY(s_axi_diff_io_AWREADY);
    differentiate_diff_io_s_axi_U->AWADDR(s_axi_diff_io_AWADDR);
    differentiate_diff_io_s_axi_U->WVALID(s_axi_diff_io_WVALID);
    differentiate_diff_io_s_axi_U->WREADY(s_axi_diff_io_WREADY);
    differentiate_diff_io_s_axi_U->WDATA(s_axi_diff_io_WDATA);
    differentiate_diff_io_s_axi_U->WSTRB(s_axi_diff_io_WSTRB);
    differentiate_diff_io_s_axi_U->ARVALID(s_axi_diff_io_ARVALID);
    differentiate_diff_io_s_axi_U->ARREADY(s_axi_diff_io_ARREADY);
    differentiate_diff_io_s_axi_U->ARADDR(s_axi_diff_io_ARADDR);
    differentiate_diff_io_s_axi_U->RVALID(s_axi_diff_io_RVALID);
    differentiate_diff_io_s_axi_U->RREADY(s_axi_diff_io_RREADY);
    differentiate_diff_io_s_axi_U->RDATA(s_axi_diff_io_RDATA);
    differentiate_diff_io_s_axi_U->RRESP(s_axi_diff_io_RRESP);
    differentiate_diff_io_s_axi_U->BVALID(s_axi_diff_io_BVALID);
    differentiate_diff_io_s_axi_U->BREADY(s_axi_diff_io_BREADY);
    differentiate_diff_io_s_axi_U->BRESP(s_axi_diff_io_BRESP);
    differentiate_diff_io_s_axi_U->ACLK(ap_clk);
    differentiate_diff_io_s_axi_U->ARESET(ap_rst_n_inv);
    differentiate_diff_io_s_axi_U->ACLK_EN(ap_var_for_const0);
    differentiate_diff_io_s_axi_U->ap_start(ap_start);
    differentiate_diff_io_s_axi_U->interrupt(interrupt);
    differentiate_diff_io_s_axi_U->ap_ready(ap_ready);
    differentiate_diff_io_s_axi_U->ap_done(ap_done);
    differentiate_diff_io_s_axi_U->ap_idle(ap_idle);
    differentiate_diff_io_s_axi_U->img_address0(img_address0);
    differentiate_diff_io_s_axi_U->img_ce0(img_ce0);
    differentiate_diff_io_s_axi_U->img_q0(img_q0);
    differentiate_diff_io_s_axi_U->window_V_address0(window_V_address0);
    differentiate_diff_io_s_axi_U->window_V_ce0(window_V_ce0);
    differentiate_diff_io_s_axi_U->window_V_q0(window_V_q0);
    differentiate_macbkb_U0 = new differentiate_macbkb<1,1,6,7,6,12>("differentiate_macbkb_U0");
    differentiate_macbkb_U0->din0(grp_fu_492_p0);
    differentiate_macbkb_U0->din1(grp_fu_492_p1);
    differentiate_macbkb_U0->din2(grp_fu_492_p2);
    differentiate_macbkb_U0->dout(grp_fu_492_p3);
    differentiate_maccud_U1 = new differentiate_maccud<1,1,3,8,11,12>("differentiate_maccud_U1");
    differentiate_maccud_U1->din0(window_V_load_1_reg_641);
    differentiate_maccud_U1->din1(grp_fu_501_p1);
    differentiate_maccud_U1->din2(r_V_2_reg_651);
    differentiate_maccud_U1->dout(grp_fu_501_p3);
    differentiate_macdEe_U2 = new differentiate_macdEe<1,1,3,8,12,13>("differentiate_macdEe_U2");
    differentiate_macdEe_U2->din0(window_V_load_reg_646);
    differentiate_macdEe_U2->din1(grp_fu_509_p1);
    differentiate_macdEe_U2->din2(tmp1_reg_656);
    differentiate_macdEe_U2->dout(grp_fu_509_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011011);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage2_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond3_fu_303_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_217_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_217_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond3_fu_303_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ii_phi_fu_206_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_217_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten_reg_157 );

    SC_METHOD(thread_exitcond_fu_235_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_217_p2 );
    sensitive << ( j_reg_179 );

    SC_METHOD(thread_grp_fu_492_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_492_p00 );

    SC_METHOD(thread_grp_fu_492_p00);
    sensitive << ( tmp_mid2_reg_533 );

    SC_METHOD(thread_grp_fu_492_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_492_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_492_p20 );

    SC_METHOD(thread_grp_fu_492_p20);
    sensitive << ( tmp_2_fu_277_p2 );

    SC_METHOD(thread_grp_fu_501_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond3_reg_569 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( grp_fu_501_p10 );

    SC_METHOD(thread_grp_fu_501_p10);
    sensitive << ( reg_213 );

    SC_METHOD(thread_grp_fu_509_p1);
    sensitive << ( ap_reg_pp0_iter1_exitcond3_reg_569 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( grp_fu_509_p10 );

    SC_METHOD(thread_grp_fu_509_p10);
    sensitive << ( img_load_reg_636 );

    SC_METHOD(thread_i_1_fu_229_p2);
    sensitive << ( i_reg_168 );

    SC_METHOD(thread_i_mid2_fu_263_p3);
    sensitive << ( i_reg_168 );
    sensitive << ( exitcond_fu_235_p2 );
    sensitive << ( i_1_fu_229_p2 );

    SC_METHOD(thread_ifzero_fu_376_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_fu_303_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ii_1_fu_309_p2 );

    SC_METHOD(thread_ii_1_fu_309_p2);
    sensitive << ( ii_phi_fu_206_p4 );

    SC_METHOD(thread_ii_cast2_cast_fu_319_p1);
    sensitive << ( ii_phi_fu_206_p4 );

    SC_METHOD(thread_ii_cast3_fu_315_p1);
    sensitive << ( ii_phi_fu_206_p4 );

    SC_METHOD(thread_ii_phi_fu_206_p4);
    sensitive << ( ii_reg_202 );
    sensitive << ( exitcond3_reg_569 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ii_1_reg_573 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_img_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_19_cast_fu_396_p1 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( tmp_17_cast_fu_415_p1 );
    sensitive << ( tmp_18_cast_fu_428_p1 );

    SC_METHOD(thread_img_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_indvar_flatten_next_fu_223_p2);
    sensitive << ( indvar_flatten_reg_157 );

    SC_METHOD(thread_j_1_fu_294_p2);
    sensitive << ( j_mid2_reg_526 );

    SC_METHOD(thread_j_cast4_cast_fu_274_p1);
    sensitive << ( j_mid2_reg_526 );

    SC_METHOD(thread_j_mid2_fu_241_p3);
    sensitive << ( j_reg_179 );
    sensitive << ( exitcond_fu_235_p2 );

    SC_METHOD(thread_p_cast_fu_464_p1);
    sensitive << ( grp_fu_509_p3 );

    SC_METHOD(thread_p_shl1_cast_fu_366_p1);
    sensitive << ( tmp_13_fu_358_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_331_p1);
    sensitive << ( tmp_s_fu_323_p3 );

    SC_METHOD(thread_p_shl_cast_fu_354_p1);
    sensitive << ( tmp_12_fu_346_p3 );

    SC_METHOD(thread_r_V_2_fu_439_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( window_V_load_2_reg_621 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_r_V_2_fu_439_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( r_V_2_fu_439_p10 );

    SC_METHOD(thread_r_V_2_fu_439_p10);
    sensitive << ( reg_213 );

    SC_METHOD(thread_r_V_2_fu_439_p2);
    sensitive << ( r_V_2_fu_439_p0 );
    sensitive << ( r_V_2_fu_439_p1 );

    SC_METHOD(thread_res_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( res_V_addr_reg_554 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );

    SC_METHOD(thread_res_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_res_V_d0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_7_reg_669 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );

    SC_METHOD(thread_res_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_reg_pp0_iter2_ifzero_reg_592 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_sum_fu_341_p2);
    sensitive << ( tmp_mid2_reg_533 );
    sensitive << ( ii_cast3_fu_315_p1 );

    SC_METHOD(thread_temp_result_V_1_2_fu_467_p2);
    sensitive << ( p_s_reg_190 );
    sensitive << ( p_cast_fu_464_p1 );

    SC_METHOD(thread_tmp3_fu_249_p2);
    sensitive << ( i_reg_168 );

    SC_METHOD(thread_tmp_10_fu_401_p2);
    sensitive << ( tmp_3_reg_578 );

    SC_METHOD(thread_tmp_11_cast_fu_424_p1);
    sensitive << ( tmp_3_reg_578 );

    SC_METHOD(thread_tmp_11_fu_382_p2);
    sensitive << ( tmp_3_reg_578 );

    SC_METHOD(thread_tmp_12_cast_fu_406_p1);
    sensitive << ( tmp_10_fu_401_p2 );

    SC_METHOD(thread_tmp_12_fu_346_p3);
    sensitive << ( sum_fu_341_p2 );

    SC_METHOD(thread_tmp_13_cast_fu_387_p1);
    sensitive << ( tmp_11_fu_382_p2 );

    SC_METHOD(thread_tmp_13_fu_358_p3);
    sensitive << ( sum_fu_341_p2 );

    SC_METHOD(thread_tmp_14_fu_370_p2);
    sensitive << ( p_shl_cast_fu_354_p1 );
    sensitive << ( p_shl1_cast_fu_366_p1 );

    SC_METHOD(thread_tmp_15_fu_411_p2);
    sensitive << ( tmp_2_cast_cast7_reg_549 );
    sensitive << ( tmp_14_reg_585 );

    SC_METHOD(thread_tmp_16_fu_420_p2);
    sensitive << ( j_cast4_cast_reg_544 );
    sensitive << ( tmp_14_reg_585 );

    SC_METHOD(thread_tmp_17_cast_fu_415_p1);
    sensitive << ( tmp_15_fu_411_p2 );

    SC_METHOD(thread_tmp_17_fu_392_p2);
    sensitive << ( tmp_9_2_cast_cast_reg_564 );
    sensitive << ( tmp_14_reg_585 );

    SC_METHOD(thread_tmp_18_cast_fu_428_p1);
    sensitive << ( tmp_16_reg_616 );

    SC_METHOD(thread_tmp_19_cast_fu_396_p1);
    sensitive << ( tmp_17_fu_392_p2 );

    SC_METHOD(thread_tmp_2_cast_cast7_fu_282_p1);
    sensitive << ( tmp_2_fu_277_p2 );

    SC_METHOD(thread_tmp_2_fu_277_p2);
    sensitive << ( j_mid2_reg_526 );

    SC_METHOD(thread_tmp_3_fu_335_p2);
    sensitive << ( p_shl2_cast_fu_331_p1 );
    sensitive << ( ii_cast2_cast_fu_319_p1 );

    SC_METHOD(thread_tmp_6_fu_480_p2);
    sensitive << ( temp_result_V_1_2_reg_661 );

    SC_METHOD(thread_tmp_7_fu_485_p3);
    sensitive << ( temp_result_V_1_2_reg_661 );
    sensitive << ( tmp_fu_473_p3 );
    sensitive << ( tmp_6_fu_480_p2 );

    SC_METHOD(thread_tmp_9_2_cast_cast_fu_299_p1);
    sensitive << ( j_1_fu_294_p2 );

    SC_METHOD(thread_tmp_9_cast_fu_290_p1);
    sensitive << ( grp_fu_492_p3 );

    SC_METHOD(thread_tmp_fu_473_p3);
    sensitive << ( temp_result_V_1_2_reg_661 );

    SC_METHOD(thread_tmp_mid2_fu_255_p3);
    sensitive << ( i_reg_168 );
    sensitive << ( exitcond_fu_235_p2 );
    sensitive << ( tmp3_fu_249_p2 );

    SC_METHOD(thread_tmp_s_fu_323_p3);
    sensitive << ( ii_phi_fu_206_p4 );

    SC_METHOD(thread_window_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_13_cast_fu_387_p1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_12_cast_fu_406_p1 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( tmp_11_cast_fu_424_p1 );

    SC_METHOD(thread_window_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_217_p2 );
    sensitive << ( exitcond3_fu_303_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage2_flag00011011 );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "differentiate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, res_V_address0, "(port)res_V_address0");
    sc_trace(mVcdFile, res_V_ce0, "(port)res_V_ce0");
    sc_trace(mVcdFile, res_V_we0, "(port)res_V_we0");
    sc_trace(mVcdFile, res_V_d0, "(port)res_V_d0");
    sc_trace(mVcdFile, s_axi_diff_io_AWVALID, "(port)s_axi_diff_io_AWVALID");
    sc_trace(mVcdFile, s_axi_diff_io_AWREADY, "(port)s_axi_diff_io_AWREADY");
    sc_trace(mVcdFile, s_axi_diff_io_AWADDR, "(port)s_axi_diff_io_AWADDR");
    sc_trace(mVcdFile, s_axi_diff_io_WVALID, "(port)s_axi_diff_io_WVALID");
    sc_trace(mVcdFile, s_axi_diff_io_WREADY, "(port)s_axi_diff_io_WREADY");
    sc_trace(mVcdFile, s_axi_diff_io_WDATA, "(port)s_axi_diff_io_WDATA");
    sc_trace(mVcdFile, s_axi_diff_io_WSTRB, "(port)s_axi_diff_io_WSTRB");
    sc_trace(mVcdFile, s_axi_diff_io_ARVALID, "(port)s_axi_diff_io_ARVALID");
    sc_trace(mVcdFile, s_axi_diff_io_ARREADY, "(port)s_axi_diff_io_ARREADY");
    sc_trace(mVcdFile, s_axi_diff_io_ARADDR, "(port)s_axi_diff_io_ARADDR");
    sc_trace(mVcdFile, s_axi_diff_io_RVALID, "(port)s_axi_diff_io_RVALID");
    sc_trace(mVcdFile, s_axi_diff_io_RREADY, "(port)s_axi_diff_io_RREADY");
    sc_trace(mVcdFile, s_axi_diff_io_RDATA, "(port)s_axi_diff_io_RDATA");
    sc_trace(mVcdFile, s_axi_diff_io_RRESP, "(port)s_axi_diff_io_RRESP");
    sc_trace(mVcdFile, s_axi_diff_io_BVALID, "(port)s_axi_diff_io_BVALID");
    sc_trace(mVcdFile, s_axi_diff_io_BREADY, "(port)s_axi_diff_io_BREADY");
    sc_trace(mVcdFile, s_axi_diff_io_BRESP, "(port)s_axi_diff_io_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, img_address0, "img_address0");
    sc_trace(mVcdFile, img_ce0, "img_ce0");
    sc_trace(mVcdFile, img_q0, "img_q0");
    sc_trace(mVcdFile, window_V_address0, "window_V_address0");
    sc_trace(mVcdFile, window_V_ce0, "window_V_ce0");
    sc_trace(mVcdFile, window_V_q0, "window_V_q0");
    sc_trace(mVcdFile, p_s_reg_190, "p_s_reg_190");
    sc_trace(mVcdFile, ii_reg_202, "ii_reg_202");
    sc_trace(mVcdFile, reg_213, "reg_213");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage2_iter0, "ap_block_state6_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage2_iter1, "ap_block_state9_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter2, "ap_block_state12_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011001, "ap_block_pp0_stage2_flag00011001");
    sc_trace(mVcdFile, exitcond3_reg_569, "exitcond3_reg_569");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter0, "ap_block_state5_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter2, "ap_block_state11_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond3_reg_569, "ap_reg_pp0_iter1_exitcond3_reg_569");
    sc_trace(mVcdFile, indvar_flatten_next_fu_223_p2, "indvar_flatten_next_fu_223_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_521, "indvar_flatten_next_reg_521");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_mid2_fu_241_p3, "j_mid2_fu_241_p3");
    sc_trace(mVcdFile, j_mid2_reg_526, "j_mid2_reg_526");
    sc_trace(mVcdFile, exitcond_flatten_fu_217_p2, "exitcond_flatten_fu_217_p2");
    sc_trace(mVcdFile, tmp_mid2_fu_255_p3, "tmp_mid2_fu_255_p3");
    sc_trace(mVcdFile, tmp_mid2_reg_533, "tmp_mid2_reg_533");
    sc_trace(mVcdFile, i_mid2_fu_263_p3, "i_mid2_fu_263_p3");
    sc_trace(mVcdFile, i_mid2_reg_539, "i_mid2_reg_539");
    sc_trace(mVcdFile, j_cast4_cast_fu_274_p1, "j_cast4_cast_fu_274_p1");
    sc_trace(mVcdFile, j_cast4_cast_reg_544, "j_cast4_cast_reg_544");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_2_cast_cast7_fu_282_p1, "tmp_2_cast_cast7_fu_282_p1");
    sc_trace(mVcdFile, tmp_2_cast_cast7_reg_549, "tmp_2_cast_cast7_reg_549");
    sc_trace(mVcdFile, res_V_addr_reg_554, "res_V_addr_reg_554");
    sc_trace(mVcdFile, j_1_fu_294_p2, "j_1_fu_294_p2");
    sc_trace(mVcdFile, j_1_reg_559, "j_1_reg_559");
    sc_trace(mVcdFile, tmp_9_2_cast_cast_fu_299_p1, "tmp_9_2_cast_cast_fu_299_p1");
    sc_trace(mVcdFile, tmp_9_2_cast_cast_reg_564, "tmp_9_2_cast_cast_reg_564");
    sc_trace(mVcdFile, exitcond3_fu_303_p2, "exitcond3_fu_303_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter2, "ap_block_state10_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond3_reg_569, "ap_reg_pp0_iter2_exitcond3_reg_569");
    sc_trace(mVcdFile, ii_1_fu_309_p2, "ii_1_fu_309_p2");
    sc_trace(mVcdFile, ii_1_reg_573, "ii_1_reg_573");
    sc_trace(mVcdFile, tmp_3_fu_335_p2, "tmp_3_fu_335_p2");
    sc_trace(mVcdFile, tmp_3_reg_578, "tmp_3_reg_578");
    sc_trace(mVcdFile, tmp_14_fu_370_p2, "tmp_14_fu_370_p2");
    sc_trace(mVcdFile, tmp_14_reg_585, "tmp_14_reg_585");
    sc_trace(mVcdFile, ifzero_fu_376_p2, "ifzero_fu_376_p2");
    sc_trace(mVcdFile, ifzero_reg_592, "ifzero_reg_592");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_ifzero_reg_592, "ap_reg_pp0_iter1_ifzero_reg_592");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_ifzero_reg_592, "ap_reg_pp0_iter2_ifzero_reg_592");
    sc_trace(mVcdFile, tmp_16_fu_420_p2, "tmp_16_fu_420_p2");
    sc_trace(mVcdFile, tmp_16_reg_616, "tmp_16_reg_616");
    sc_trace(mVcdFile, window_V_load_2_reg_621, "window_V_load_2_reg_621");
    sc_trace(mVcdFile, img_load_reg_636, "img_load_reg_636");
    sc_trace(mVcdFile, window_V_load_1_reg_641, "window_V_load_1_reg_641");
    sc_trace(mVcdFile, window_V_load_reg_646, "window_V_load_reg_646");
    sc_trace(mVcdFile, r_V_2_fu_439_p2, "r_V_2_fu_439_p2");
    sc_trace(mVcdFile, r_V_2_reg_651, "r_V_2_reg_651");
    sc_trace(mVcdFile, grp_fu_501_p3, "grp_fu_501_p3");
    sc_trace(mVcdFile, tmp1_reg_656, "tmp1_reg_656");
    sc_trace(mVcdFile, temp_result_V_1_2_fu_467_p2, "temp_result_V_1_2_fu_467_p2");
    sc_trace(mVcdFile, temp_result_V_1_2_reg_661, "temp_result_V_1_2_reg_661");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_7_fu_485_p3, "tmp_7_fu_485_p3");
    sc_trace(mVcdFile, tmp_7_reg_669, "tmp_7_reg_669");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011011, "ap_block_pp0_stage2_flag00011011");
    sc_trace(mVcdFile, indvar_flatten_reg_157, "indvar_flatten_reg_157");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, i_reg_168, "i_reg_168");
    sc_trace(mVcdFile, j_reg_179, "j_reg_179");
    sc_trace(mVcdFile, ii_phi_fu_206_p4, "ii_phi_fu_206_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, tmp_9_cast_fu_290_p1, "tmp_9_cast_fu_290_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_387_p1, "tmp_13_cast_fu_387_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00000000, "ap_block_pp0_stage1_flag00000000");
    sc_trace(mVcdFile, tmp_19_cast_fu_396_p1, "tmp_19_cast_fu_396_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_406_p1, "tmp_12_cast_fu_406_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00000000, "ap_block_pp0_stage2_flag00000000");
    sc_trace(mVcdFile, tmp_17_cast_fu_415_p1, "tmp_17_cast_fu_415_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_424_p1, "tmp_11_cast_fu_424_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_428_p1, "tmp_18_cast_fu_428_p1");
    sc_trace(mVcdFile, exitcond_fu_235_p2, "exitcond_fu_235_p2");
    sc_trace(mVcdFile, tmp3_fu_249_p2, "tmp3_fu_249_p2");
    sc_trace(mVcdFile, i_1_fu_229_p2, "i_1_fu_229_p2");
    sc_trace(mVcdFile, tmp_2_fu_277_p2, "tmp_2_fu_277_p2");
    sc_trace(mVcdFile, grp_fu_492_p3, "grp_fu_492_p3");
    sc_trace(mVcdFile, tmp_s_fu_323_p3, "tmp_s_fu_323_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_331_p1, "p_shl2_cast_fu_331_p1");
    sc_trace(mVcdFile, ii_cast2_cast_fu_319_p1, "ii_cast2_cast_fu_319_p1");
    sc_trace(mVcdFile, ii_cast3_fu_315_p1, "ii_cast3_fu_315_p1");
    sc_trace(mVcdFile, sum_fu_341_p2, "sum_fu_341_p2");
    sc_trace(mVcdFile, tmp_12_fu_346_p3, "tmp_12_fu_346_p3");
    sc_trace(mVcdFile, tmp_13_fu_358_p3, "tmp_13_fu_358_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_354_p1, "p_shl_cast_fu_354_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_366_p1, "p_shl1_cast_fu_366_p1");
    sc_trace(mVcdFile, tmp_11_fu_382_p2, "tmp_11_fu_382_p2");
    sc_trace(mVcdFile, tmp_17_fu_392_p2, "tmp_17_fu_392_p2");
    sc_trace(mVcdFile, tmp_10_fu_401_p2, "tmp_10_fu_401_p2");
    sc_trace(mVcdFile, tmp_15_fu_411_p2, "tmp_15_fu_411_p2");
    sc_trace(mVcdFile, r_V_2_fu_439_p0, "r_V_2_fu_439_p0");
    sc_trace(mVcdFile, r_V_2_fu_439_p1, "r_V_2_fu_439_p1");
    sc_trace(mVcdFile, grp_fu_509_p3, "grp_fu_509_p3");
    sc_trace(mVcdFile, p_cast_fu_464_p1, "p_cast_fu_464_p1");
    sc_trace(mVcdFile, tmp_fu_473_p3, "tmp_fu_473_p3");
    sc_trace(mVcdFile, tmp_6_fu_480_p2, "tmp_6_fu_480_p2");
    sc_trace(mVcdFile, grp_fu_492_p0, "grp_fu_492_p0");
    sc_trace(mVcdFile, grp_fu_492_p1, "grp_fu_492_p1");
    sc_trace(mVcdFile, grp_fu_492_p2, "grp_fu_492_p2");
    sc_trace(mVcdFile, grp_fu_501_p1, "grp_fu_501_p1");
    sc_trace(mVcdFile, grp_fu_509_p1, "grp_fu_509_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_492_p00, "grp_fu_492_p00");
    sc_trace(mVcdFile, grp_fu_492_p20, "grp_fu_492_p20");
    sc_trace(mVcdFile, grp_fu_501_p10, "grp_fu_501_p10");
    sc_trace(mVcdFile, grp_fu_509_p10, "grp_fu_509_p10");
    sc_trace(mVcdFile, r_V_2_fu_439_p10, "r_V_2_fu_439_p10");
#endif

    }
    mHdltvinHandle.open("differentiate.hdltvin.dat");
    mHdltvoutHandle.open("differentiate.hdltvout.dat");
}

differentiate::~differentiate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete differentiate_diff_io_s_axi_U;
    delete differentiate_macbkb_U0;
    delete differentiate_maccud_U1;
    delete differentiate_macdEe_U2;
}

void differentiate::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void differentiate::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_reg_168 = i_mid2_reg_539.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_168 = ap_const_lv6_1;
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_569.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ii_reg_202 = ii_1_reg_573.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ii_reg_202 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        indvar_flatten_reg_157 = indvar_flatten_next_reg_521.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_157 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_reg_179 = j_1_reg_559.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_179 = ap_const_lv6_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond3_reg_569.read()))) {
        p_s_reg_190 = temp_result_V_1_2_reg_661.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_s_reg_190 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond3_reg_569 = exitcond3_reg_569.read();
        ap_reg_pp0_iter1_ifzero_reg_592 = ifzero_reg_592.read();
        ap_reg_pp0_iter2_exitcond3_reg_569 = ap_reg_pp0_iter1_exitcond3_reg_569.read();
        ap_reg_pp0_iter2_ifzero_reg_592 = ap_reg_pp0_iter1_ifzero_reg_592.read();
        exitcond3_reg_569 = exitcond3_fu_303_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_217_p2.read()))) {
        i_mid2_reg_539 = i_mid2_fu_263_p3.read();
        j_mid2_reg_526 = j_mid2_fu_241_p3.read();
        tmp_mid2_reg_533 = tmp_mid2_fu_255_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_303_p2.read()))) {
        ifzero_reg_592 = ifzero_fu_376_p2.read();
        tmp_14_reg_585 = tmp_14_fu_370_p2.read();
        tmp_3_reg_578 = tmp_3_fu_335_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ii_1_reg_573 = ii_1_fu_309_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_569.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        img_load_reg_636 = img_q0.read();
        window_V_load_1_reg_641 = window_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_next_reg_521 = indvar_flatten_next_fu_223_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_559 = j_1_fu_294_p2.read();
        j_cast4_cast_reg_544 = j_cast4_cast_fu_274_p1.read();
        res_V_addr_reg_554 =  (sc_lv<12>) (tmp_9_cast_fu_290_p1.read());
        tmp_2_cast_cast7_reg_549 = tmp_2_cast_cast7_fu_282_p1.read();
        tmp_9_2_cast_cast_reg_564 = tmp_9_2_cast_cast_fu_299_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_569.read()))) {
        r_V_2_reg_651 = r_V_2_fu_439_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_569.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_569.read())))) {
        reg_213 = img_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_569.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        temp_result_V_1_2_reg_661 = temp_result_V_1_2_fu_467_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_569.read()))) {
        tmp1_reg_656 = grp_fu_501_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_569.read(), ap_const_lv1_0))) {
        tmp_16_reg_616 = tmp_16_fu_420_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter2_ifzero_reg_592.read(), ap_const_lv1_1))) {
        tmp_7_reg_669 = tmp_7_fu_485_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_569.read(), ap_const_lv1_0))) {
        window_V_load_2_reg_621 = window_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_569.read()))) {
        window_V_load_reg_646 = window_V_q0.read();
    }
}

void differentiate::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void differentiate::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[4];
}

void differentiate::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[5];
}

void differentiate::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void differentiate::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[6];
}

void differentiate::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void differentiate::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void differentiate::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage1_flag00000000() {
    ap_block_pp0_stage1_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage2_flag00000000() {
    ap_block_pp0_stage2_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage2_flag00011001() {
    ap_block_pp0_stage2_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage2_flag00011011() {
    ap_block_pp0_stage2_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state10_pp0_stage0_iter2() {
    ap_block_state10_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state11_pp0_stage1_iter2() {
    ap_block_state11_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state12_pp0_stage2_iter2() {
    ap_block_state12_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state5_pp0_stage1_iter0() {
    ap_block_state5_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state6_pp0_stage2_iter0() {
    ap_block_state6_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state9_pp0_stage2_iter1() {
    ap_block_state9_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond3_fu_303_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void differentiate::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_217_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void differentiate::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void differentiate::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void differentiate::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void differentiate::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_217_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void differentiate::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void differentiate::thread_exitcond3_fu_303_p2() {
    exitcond3_fu_303_p2 = (!ii_phi_fu_206_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ii_phi_fu_206_p4.read() == ap_const_lv2_3);
}

void differentiate::thread_exitcond_flatten_fu_217_p2() {
    exitcond_flatten_fu_217_p2 = (!indvar_flatten_reg_157.read().is_01() || !ap_const_lv12_B24.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_157.read() == ap_const_lv12_B24);
}

void differentiate::thread_exitcond_fu_235_p2() {
    exitcond_fu_235_p2 = (!j_reg_179.read().is_01() || !ap_const_lv6_2F.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_179.read() == ap_const_lv6_2F);
}

void differentiate::thread_grp_fu_492_p0() {
    grp_fu_492_p0 =  (sc_lv<6>) (grp_fu_492_p00.read());
}

void differentiate::thread_grp_fu_492_p00() {
    grp_fu_492_p00 = esl_zext<12,6>(tmp_mid2_reg_533.read());
}

void differentiate::thread_grp_fu_492_p1() {
    grp_fu_492_p1 =  (sc_lv<7>) (ap_const_lv12_2E);
}

void differentiate::thread_grp_fu_492_p2() {
    grp_fu_492_p2 =  (sc_lv<6>) (grp_fu_492_p20.read());
}

void differentiate::thread_grp_fu_492_p20() {
    grp_fu_492_p20 = esl_zext<12,6>(tmp_2_fu_277_p2.read());
}

void differentiate::thread_grp_fu_501_p1() {
    grp_fu_501_p1 =  (sc_lv<8>) (grp_fu_501_p10.read());
}

void differentiate::thread_grp_fu_501_p10() {
    grp_fu_501_p10 = esl_zext<11,8>(reg_213.read());
}

void differentiate::thread_grp_fu_509_p1() {
    grp_fu_509_p1 =  (sc_lv<8>) (grp_fu_509_p10.read());
}

void differentiate::thread_grp_fu_509_p10() {
    grp_fu_509_p10 = esl_zext<11,8>(img_load_reg_636.read());
}

void differentiate::thread_i_1_fu_229_p2() {
    i_1_fu_229_p2 = (!i_reg_168.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_168.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void differentiate::thread_i_mid2_fu_263_p3() {
    i_mid2_fu_263_p3 = (!exitcond_fu_235_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_235_p2.read()[0].to_bool())? i_1_fu_229_p2.read(): i_reg_168.read());
}

void differentiate::thread_ifzero_fu_376_p2() {
    ifzero_fu_376_p2 = (!ii_1_fu_309_p2.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ii_1_fu_309_p2.read() == ap_const_lv2_3);
}

void differentiate::thread_ii_1_fu_309_p2() {
    ii_1_fu_309_p2 = (!ii_phi_fu_206_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ii_phi_fu_206_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void differentiate::thread_ii_cast2_cast_fu_319_p1() {
    ii_cast2_cast_fu_319_p1 = esl_zext<5,2>(ii_phi_fu_206_p4.read());
}

void differentiate::thread_ii_cast3_fu_315_p1() {
    ii_cast3_fu_315_p1 = esl_zext<6,2>(ii_phi_fu_206_p4.read());
}

void differentiate::thread_ii_phi_fu_206_p4() {
    if ((esl_seteq<1,1,1>(exitcond3_reg_569.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        ii_phi_fu_206_p4 = ii_1_reg_573.read();
    } else {
        ii_phi_fu_206_p4 = ii_reg_202.read();
    }
}

void differentiate::thread_img_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        img_address0 =  (sc_lv<12>) (tmp_18_cast_fu_428_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00000000.read(), ap_const_boolean_0))) {
        img_address0 =  (sc_lv<12>) (tmp_17_cast_fu_415_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        img_address0 =  (sc_lv<12>) (tmp_19_cast_fu_396_p1.read());
    } else {
        img_address0 = "XXXXXXXXXXXX";
    }
}

void differentiate::thread_img_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)))) {
        img_ce0 = ap_const_logic_1;
    } else {
        img_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_indvar_flatten_next_fu_223_p2() {
    indvar_flatten_next_fu_223_p2 = (!indvar_flatten_reg_157.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(indvar_flatten_reg_157.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void differentiate::thread_j_1_fu_294_p2() {
    j_1_fu_294_p2 = (!j_mid2_reg_526.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_mid2_reg_526.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void differentiate::thread_j_cast4_cast_fu_274_p1() {
    j_cast4_cast_fu_274_p1 = esl_zext<13,6>(j_mid2_reg_526.read());
}

void differentiate::thread_j_mid2_fu_241_p3() {
    j_mid2_fu_241_p3 = (!exitcond_fu_235_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_235_p2.read()[0].to_bool())? ap_const_lv6_1: j_reg_179.read());
}

void differentiate::thread_p_cast_fu_464_p1() {
    p_cast_fu_464_p1 = esl_sext<15,13>(grp_fu_509_p3.read());
}

void differentiate::thread_p_shl1_cast_fu_366_p1() {
    p_shl1_cast_fu_366_p1 = esl_zext<13,10>(tmp_13_fu_358_p3.read());
}

void differentiate::thread_p_shl2_cast_fu_331_p1() {
    p_shl2_cast_fu_331_p1 = esl_zext<5,4>(tmp_s_fu_323_p3.read());
}

void differentiate::thread_p_shl_cast_fu_354_p1() {
    p_shl_cast_fu_354_p1 = esl_zext<13,12>(tmp_12_fu_346_p3.read());
}

void differentiate::thread_r_V_2_fu_439_p0() {
    r_V_2_fu_439_p0 = window_V_load_2_reg_621.read();
}

void differentiate::thread_r_V_2_fu_439_p1() {
    r_V_2_fu_439_p1 =  (sc_lv<8>) (r_V_2_fu_439_p10.read());
}

void differentiate::thread_r_V_2_fu_439_p10() {
    r_V_2_fu_439_p10 = esl_zext<11,8>(reg_213.read());
}

void differentiate::thread_r_V_2_fu_439_p2() {
    r_V_2_fu_439_p2 = (!r_V_2_fu_439_p0.read().is_01() || !r_V_2_fu_439_p1.read().is_01())? sc_lv<11>(): sc_bigint<3>(r_V_2_fu_439_p0.read()) * sc_biguint<8>(r_V_2_fu_439_p1.read());
}

void differentiate::thread_res_V_address0() {
    res_V_address0 = res_V_addr_reg_554.read();
}

void differentiate::thread_res_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        res_V_ce0 = ap_const_logic_1;
    } else {
        res_V_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_res_V_d0() {
    res_V_d0 = tmp_7_reg_669.read();
}

void differentiate::thread_res_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter2_ifzero_reg_592.read(), ap_const_lv1_1))) {
        res_V_we0 = ap_const_logic_1;
    } else {
        res_V_we0 = ap_const_logic_0;
    }
}

void differentiate::thread_sum_fu_341_p2() {
    sum_fu_341_p2 = (!tmp_mid2_reg_533.read().is_01() || !ii_cast3_fu_315_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_mid2_reg_533.read()) + sc_biguint<6>(ii_cast3_fu_315_p1.read()));
}

void differentiate::thread_temp_result_V_1_2_fu_467_p2() {
    temp_result_V_1_2_fu_467_p2 = (!p_cast_fu_464_p1.read().is_01() || !p_s_reg_190.read().is_01())? sc_lv<15>(): (sc_bigint<15>(p_cast_fu_464_p1.read()) + sc_biguint<15>(p_s_reg_190.read()));
}

void differentiate::thread_tmp3_fu_249_p2() {
    tmp3_fu_249_p2 = (!i_reg_168.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_168.read()) + sc_bigint<6>(ap_const_lv6_3F));
}

void differentiate::thread_tmp_10_fu_401_p2() {
    tmp_10_fu_401_p2 = (!tmp_3_reg_578.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_578.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void differentiate::thread_tmp_11_cast_fu_424_p1() {
    tmp_11_cast_fu_424_p1 = esl_sext<32,5>(tmp_3_reg_578.read());
}

void differentiate::thread_tmp_11_fu_382_p2() {
    tmp_11_fu_382_p2 = (!tmp_3_reg_578.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_578.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void differentiate::thread_tmp_12_cast_fu_406_p1() {
    tmp_12_cast_fu_406_p1 = esl_sext<32,5>(tmp_10_fu_401_p2.read());
}

void differentiate::thread_tmp_12_fu_346_p3() {
    tmp_12_fu_346_p3 = esl_concat<6,6>(sum_fu_341_p2.read(), ap_const_lv6_0);
}

void differentiate::thread_tmp_13_cast_fu_387_p1() {
    tmp_13_cast_fu_387_p1 = esl_sext<32,5>(tmp_11_fu_382_p2.read());
}

void differentiate::thread_tmp_13_fu_358_p3() {
    tmp_13_fu_358_p3 = esl_concat<6,4>(sum_fu_341_p2.read(), ap_const_lv4_0);
}

void differentiate::thread_tmp_14_fu_370_p2() {
    tmp_14_fu_370_p2 = (!p_shl_cast_fu_354_p1.read().is_01() || !p_shl1_cast_fu_366_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl_cast_fu_354_p1.read()) - sc_biguint<13>(p_shl1_cast_fu_366_p1.read()));
}

void differentiate::thread_tmp_15_fu_411_p2() {
    tmp_15_fu_411_p2 = (!tmp_14_reg_585.read().is_01() || !tmp_2_cast_cast7_reg_549.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_14_reg_585.read()) + sc_biguint<13>(tmp_2_cast_cast7_reg_549.read()));
}

void differentiate::thread_tmp_16_fu_420_p2() {
    tmp_16_fu_420_p2 = (!tmp_14_reg_585.read().is_01() || !j_cast4_cast_reg_544.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_14_reg_585.read()) + sc_biguint<13>(j_cast4_cast_reg_544.read()));
}

void differentiate::thread_tmp_17_cast_fu_415_p1() {
    tmp_17_cast_fu_415_p1 = esl_sext<32,13>(tmp_15_fu_411_p2.read());
}

void differentiate::thread_tmp_17_fu_392_p2() {
    tmp_17_fu_392_p2 = (!tmp_14_reg_585.read().is_01() || !tmp_9_2_cast_cast_reg_564.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_14_reg_585.read()) + sc_biguint<13>(tmp_9_2_cast_cast_reg_564.read()));
}

void differentiate::thread_tmp_18_cast_fu_428_p1() {
    tmp_18_cast_fu_428_p1 = esl_sext<32,13>(tmp_16_reg_616.read());
}

void differentiate::thread_tmp_19_cast_fu_396_p1() {
    tmp_19_cast_fu_396_p1 = esl_sext<32,13>(tmp_17_fu_392_p2.read());
}

void differentiate::thread_tmp_2_cast_cast7_fu_282_p1() {
    tmp_2_cast_cast7_fu_282_p1 = esl_zext<13,6>(tmp_2_fu_277_p2.read());
}

void differentiate::thread_tmp_2_fu_277_p2() {
    tmp_2_fu_277_p2 = (!j_mid2_reg_526.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(j_mid2_reg_526.read()) + sc_bigint<6>(ap_const_lv6_3F));
}

void differentiate::thread_tmp_3_fu_335_p2() {
    tmp_3_fu_335_p2 = (!p_shl2_cast_fu_331_p1.read().is_01() || !ii_cast2_cast_fu_319_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl2_cast_fu_331_p1.read()) - sc_biguint<5>(ii_cast2_cast_fu_319_p1.read()));
}

void differentiate::thread_tmp_6_fu_480_p2() {
    tmp_6_fu_480_p2 = (!ap_const_lv15_0.is_01() || !temp_result_V_1_2_reg_661.read().is_01())? sc_lv<15>(): (sc_biguint<15>(ap_const_lv15_0) - sc_biguint<15>(temp_result_V_1_2_reg_661.read()));
}

void differentiate::thread_tmp_7_fu_485_p3() {
    tmp_7_fu_485_p3 = (!tmp_fu_473_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_fu_473_p3.read()[0].to_bool())? tmp_6_fu_480_p2.read(): temp_result_V_1_2_reg_661.read());
}

void differentiate::thread_tmp_9_2_cast_cast_fu_299_p1() {
    tmp_9_2_cast_cast_fu_299_p1 = esl_zext<13,6>(j_1_fu_294_p2.read());
}

void differentiate::thread_tmp_9_cast_fu_290_p1() {
    tmp_9_cast_fu_290_p1 = esl_zext<32,12>(grp_fu_492_p3.read());
}

void differentiate::thread_tmp_fu_473_p3() {
    tmp_fu_473_p3 = temp_result_V_1_2_reg_661.read().range(14, 14);
}

void differentiate::thread_tmp_mid2_fu_255_p3() {
    tmp_mid2_fu_255_p3 = (!exitcond_fu_235_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_235_p2.read()[0].to_bool())? i_reg_168.read(): tmp3_fu_249_p2.read());
}

void differentiate::thread_tmp_s_fu_323_p3() {
    tmp_s_fu_323_p3 = esl_concat<2,2>(ii_phi_fu_206_p4.read(), ap_const_lv2_0);
}

void differentiate::thread_window_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        window_V_address0 =  (sc_lv<4>) (tmp_11_cast_fu_424_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00000000.read(), ap_const_boolean_0))) {
        window_V_address0 =  (sc_lv<4>) (tmp_12_cast_fu_406_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        window_V_address0 =  (sc_lv<4>) (tmp_13_cast_fu_387_p1.read());
    } else {
        window_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void differentiate::thread_window_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)))) {
        window_V_ce0 = ap_const_logic_1;
    } else {
        window_V_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_217_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_303_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_303_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

void differentiate::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"res_V_address0\" :  \"" << res_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_ce0\" :  \"" << res_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_we0\" :  \"" << res_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_d0\" :  \"" << res_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_AWVALID\" :  \"" << s_axi_diff_io_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_AWREADY\" :  \"" << s_axi_diff_io_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_AWADDR\" :  \"" << s_axi_diff_io_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_WVALID\" :  \"" << s_axi_diff_io_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_WREADY\" :  \"" << s_axi_diff_io_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_WDATA\" :  \"" << s_axi_diff_io_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_WSTRB\" :  \"" << s_axi_diff_io_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_ARVALID\" :  \"" << s_axi_diff_io_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_ARREADY\" :  \"" << s_axi_diff_io_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_ARADDR\" :  \"" << s_axi_diff_io_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_RVALID\" :  \"" << s_axi_diff_io_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_RREADY\" :  \"" << s_axi_diff_io_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_RDATA\" :  \"" << s_axi_diff_io_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_RRESP\" :  \"" << s_axi_diff_io_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_BVALID\" :  \"" << s_axi_diff_io_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_BREADY\" :  \"" << s_axi_diff_io_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_BRESP\" :  \"" << s_axi_diff_io_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

