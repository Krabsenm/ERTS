// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "differentiate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic differentiate::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic differentiate::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> differentiate::ap_ST_fsm_state1 = "1";
const sc_lv<14> differentiate::ap_ST_fsm_state2 = "10";
const sc_lv<14> differentiate::ap_ST_fsm_state3 = "100";
const sc_lv<14> differentiate::ap_ST_fsm_state4 = "1000";
const sc_lv<14> differentiate::ap_ST_fsm_state5 = "10000";
const sc_lv<14> differentiate::ap_ST_fsm_state6 = "100000";
const sc_lv<14> differentiate::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> differentiate::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> differentiate::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> differentiate::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> differentiate::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> differentiate::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> differentiate::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> differentiate::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> differentiate::ap_const_lv32_0 = "00000000000000000000000000000000";
const int differentiate::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> differentiate::ap_const_lv32_1 = "1";
const sc_lv<1> differentiate::ap_const_lv1_0 = "0";
const sc_lv<32> differentiate::ap_const_lv32_2 = "10";
const sc_lv<32> differentiate::ap_const_lv32_3 = "11";
const sc_lv<32> differentiate::ap_const_lv32_4 = "100";
const sc_lv<1> differentiate::ap_const_lv1_1 = "1";
const sc_lv<32> differentiate::ap_const_lv32_5 = "101";
const sc_lv<32> differentiate::ap_const_lv32_6 = "110";
const sc_lv<32> differentiate::ap_const_lv32_7 = "111";
const sc_lv<32> differentiate::ap_const_lv32_8 = "1000";
const sc_lv<32> differentiate::ap_const_lv32_9 = "1001";
const sc_lv<32> differentiate::ap_const_lv32_A = "1010";
const sc_lv<32> differentiate::ap_const_lv32_B = "1011";
const sc_lv<32> differentiate::ap_const_lv32_C = "1100";
const sc_lv<6> differentiate::ap_const_lv6_1 = "1";
const sc_lv<32> differentiate::ap_const_lv32_D = "1101";
const sc_lv<15> differentiate::ap_const_lv15_0 = "000000000000000";
const sc_lv<2> differentiate::ap_const_lv2_0 = "00";
const sc_lv<6> differentiate::ap_const_lv6_3F = "111111";
const sc_lv<12> differentiate::ap_const_lv12_2E = "101110";
const sc_lv<6> differentiate::ap_const_lv6_2F = "101111";
const sc_lv<5> differentiate::ap_const_lv5_1 = "1";
const sc_lv<5> differentiate::ap_const_lv5_2 = "10";
const sc_lv<2> differentiate::ap_const_lv2_3 = "11";
const sc_lv<2> differentiate::ap_const_lv2_1 = "1";
const sc_lv<6> differentiate::ap_const_lv6_0 = "000000";
const sc_lv<4> differentiate::ap_const_lv4_0 = "0000";
const sc_lv<32> differentiate::ap_const_lv32_E = "1110";
const bool differentiate::ap_const_boolean_1 = true;

differentiate::differentiate(sc_module_name name) : sc_module(name), mVcdFile(0) {
    differentiate_diff_io_s_axi_U = new differentiate_diff_io_s_axi<C_S_AXI_DIFF_IO_ADDR_WIDTH,C_S_AXI_DIFF_IO_DATA_WIDTH>("differentiate_diff_io_s_axi_U");
    differentiate_diff_io_s_axi_U->AWVALID(s_axi_diff_io_AWVALID);
    differentiate_diff_io_s_axi_U->AWREADY(s_axi_diff_io_AWREADY);
    differentiate_diff_io_s_axi_U->AWADDR(s_axi_diff_io_AWADDR);
    differentiate_diff_io_s_axi_U->WVALID(s_axi_diff_io_WVALID);
    differentiate_diff_io_s_axi_U->WREADY(s_axi_diff_io_WREADY);
    differentiate_diff_io_s_axi_U->WDATA(s_axi_diff_io_WDATA);
    differentiate_diff_io_s_axi_U->WSTRB(s_axi_diff_io_WSTRB);
    differentiate_diff_io_s_axi_U->ARVALID(s_axi_diff_io_ARVALID);
    differentiate_diff_io_s_axi_U->ARREADY(s_axi_diff_io_ARREADY);
    differentiate_diff_io_s_axi_U->ARADDR(s_axi_diff_io_ARADDR);
    differentiate_diff_io_s_axi_U->RVALID(s_axi_diff_io_RVALID);
    differentiate_diff_io_s_axi_U->RREADY(s_axi_diff_io_RREADY);
    differentiate_diff_io_s_axi_U->RDATA(s_axi_diff_io_RDATA);
    differentiate_diff_io_s_axi_U->RRESP(s_axi_diff_io_RRESP);
    differentiate_diff_io_s_axi_U->BVALID(s_axi_diff_io_BVALID);
    differentiate_diff_io_s_axi_U->BREADY(s_axi_diff_io_BREADY);
    differentiate_diff_io_s_axi_U->BRESP(s_axi_diff_io_BRESP);
    differentiate_diff_io_s_axi_U->ACLK(ap_clk);
    differentiate_diff_io_s_axi_U->ARESET(ap_rst_n_inv);
    differentiate_diff_io_s_axi_U->ACLK_EN(ap_var_for_const0);
    differentiate_diff_io_s_axi_U->ap_start(ap_start);
    differentiate_diff_io_s_axi_U->interrupt(interrupt);
    differentiate_diff_io_s_axi_U->ap_ready(ap_ready);
    differentiate_diff_io_s_axi_U->ap_done(ap_done);
    differentiate_diff_io_s_axi_U->ap_idle(ap_idle);
    differentiate_diff_io_s_axi_U->img_address0(img_address0);
    differentiate_diff_io_s_axi_U->img_ce0(img_ce0);
    differentiate_diff_io_s_axi_U->img_q0(img_q0);
    differentiate_diff_io_s_axi_U->window_V_address0(window_V_address0);
    differentiate_diff_io_s_axi_U->window_V_ce0(window_V_ce0);
    differentiate_diff_io_s_axi_U->window_V_q0(window_V_q0);
    differentiate_mulbkb_U0 = new differentiate_mulbkb<1,2,6,7,12>("differentiate_mulbkb_U0");
    differentiate_mulbkb_U0->clk(ap_clk);
    differentiate_mulbkb_U0->reset(ap_rst_n_inv);
    differentiate_mulbkb_U0->din0(grp_fu_208_p0);
    differentiate_mulbkb_U0->din1(grp_fu_208_p1);
    differentiate_mulbkb_U0->ce(ap_var_for_const0);
    differentiate_mulbkb_U0->dout(grp_fu_208_p2);
    differentiate_maccud_U1 = new differentiate_maccud<1,1,3,8,12,13>("differentiate_maccud_U1");
    differentiate_maccud_U1->din0(window_V_load_reg_569);
    differentiate_maccud_U1->din1(grp_fu_452_p1);
    differentiate_maccud_U1->din2(grp_fu_460_p3);
    differentiate_maccud_U1->dout(grp_fu_452_p3);
    differentiate_macdEe_U2 = new differentiate_macdEe<1,1,3,8,11,12>("differentiate_macdEe_U2");
    differentiate_macdEe_U2->din0(window_V_load_1_reg_584);
    differentiate_macdEe_U2->din1(grp_fu_460_p1);
    differentiate_macdEe_U2->din2(r_V_2_reg_609);
    differentiate_macdEe_U2->dout(grp_fu_460_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_193_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_193_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond1_fu_193_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_147 );

    SC_METHOD(thread_exitcond2_fu_218_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_159 );

    SC_METHOD(thread_exitcond3_fu_317_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ii_reg_182 );

    SC_METHOD(thread_grp_fu_208_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_208_p00 );

    SC_METHOD(thread_grp_fu_208_p00);
    sensitive << ( tmp_reg_472 );

    SC_METHOD(thread_grp_fu_208_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_452_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_452_p10 );

    SC_METHOD(thread_grp_fu_452_p10);
    sensitive << ( img_load_reg_579 );

    SC_METHOD(thread_grp_fu_460_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_460_p10 );

    SC_METHOD(thread_grp_fu_460_p10);
    sensitive << ( img_load_1_reg_594 );

    SC_METHOD(thread_i_1_fu_258_p2);
    sensitive << ( i_reg_147 );

    SC_METHOD(thread_ii_1_fu_323_p2);
    sensitive << ( ii_reg_182 );

    SC_METHOD(thread_ii_cast2_cast_fu_268_p1);
    sensitive << ( ii_reg_182 );

    SC_METHOD(thread_ii_cast3_fu_264_p1);
    sensitive << ( ii_reg_182 );

    SC_METHOD(thread_img_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_17_cast_fu_385_p1 );
    sensitive << ( tmp_18_cast_fu_389_p1 );
    sensitive << ( tmp_19_cast_fu_393_p1 );

    SC_METHOD(thread_img_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_j_1_fu_248_p2);
    sensitive << ( j_reg_159 );

    SC_METHOD(thread_j_cast4_cast_fu_214_p1);
    sensitive << ( j_reg_159 );

    SC_METHOD(thread_p_cast_fu_427_p1);
    sensitive << ( tmp_5_reg_614 );

    SC_METHOD(thread_p_shl1_cast_fu_342_p1);
    sensitive << ( tmp_13_fu_334_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_354_p1);
    sensitive << ( tmp_14_fu_346_p3 );

    SC_METHOD(thread_p_shl_cast_fu_280_p1);
    sensitive << ( tmp_s_fu_272_p3 );

    SC_METHOD(thread_r_V_2_fu_403_p0);
    sensitive << ( window_V_load_2_reg_599 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_V_2_fu_403_p1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( r_V_2_fu_403_p10 );

    SC_METHOD(thread_r_V_2_fu_403_p10);
    sensitive << ( img_load_2_reg_604 );

    SC_METHOD(thread_r_V_2_fu_403_p2);
    sensitive << ( r_V_2_fu_403_p0 );
    sensitive << ( r_V_2_fu_403_p1 );

    SC_METHOD(thread_res_V_address0);
    sensitive << ( res_V_addr_reg_501 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_res_V_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_res_V_d0);
    sensitive << ( tmp_6_reg_559 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( p_s_reg_170 );
    sensitive << ( tmp_12_fu_436_p3 );

    SC_METHOD(thread_res_V_we0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sum_fu_329_p2);
    sensitive << ( tmp_reg_472 );
    sensitive << ( ii_cast3_fu_264_p1 );

    SC_METHOD(thread_temp_result_V_1_2_fu_430_p2);
    sensitive << ( p_s_reg_170 );
    sensitive << ( p_cast_fu_427_p1 );

    SC_METHOD(thread_tmp_10_fu_295_p2);
    sensitive << ( tmp_3_fu_284_p2 );

    SC_METHOD(thread_tmp_11_cast_fu_290_p1);
    sensitive << ( tmp_3_fu_284_p2 );

    SC_METHOD(thread_tmp_11_fu_306_p2);
    sensitive << ( tmp_3_fu_284_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_301_p1);
    sensitive << ( tmp_10_fu_295_p2 );

    SC_METHOD(thread_tmp_12_fu_436_p3);
    sensitive << ( p_s_reg_170 );

    SC_METHOD(thread_tmp_13_cast_fu_312_p1);
    sensitive << ( tmp_11_fu_306_p2 );

    SC_METHOD(thread_tmp_13_fu_334_p3);
    sensitive << ( sum_fu_329_p2 );

    SC_METHOD(thread_tmp_14_fu_346_p3);
    sensitive << ( sum_fu_329_p2 );

    SC_METHOD(thread_tmp_15_fu_358_p2);
    sensitive << ( p_shl1_cast_fu_342_p1 );
    sensitive << ( p_shl2_cast_fu_354_p1 );

    SC_METHOD(thread_tmp_16_fu_364_p2);
    sensitive << ( tmp_2_cast_cast3_reg_496 );
    sensitive << ( tmp_15_fu_358_p2 );

    SC_METHOD(thread_tmp_17_cast_fu_385_p1);
    sensitive << ( tmp_16_reg_544 );

    SC_METHOD(thread_tmp_17_fu_369_p2);
    sensitive << ( j_cast4_cast_reg_488 );
    sensitive << ( tmp_15_fu_358_p2 );

    SC_METHOD(thread_tmp_18_cast_fu_389_p1);
    sensitive << ( tmp_17_reg_549 );

    SC_METHOD(thread_tmp_18_fu_374_p2);
    sensitive << ( tmp_9_2_cast_cast_reg_511 );
    sensitive << ( tmp_15_fu_358_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_393_p1);
    sensitive << ( tmp_18_reg_554 );

    SC_METHOD(thread_tmp_2_cast_cast3_fu_230_p1);
    sensitive << ( tmp_2_fu_224_p2 );

    SC_METHOD(thread_tmp_2_cast_cast_fu_234_p1);
    sensitive << ( tmp_2_fu_224_p2 );

    SC_METHOD(thread_tmp_2_fu_224_p2);
    sensitive << ( j_reg_159 );

    SC_METHOD(thread_tmp_3_fu_284_p2);
    sensitive << ( p_shl_cast_fu_280_p1 );
    sensitive << ( ii_cast2_cast_fu_268_p1 );

    SC_METHOD(thread_tmp_6_fu_379_p2);
    sensitive << ( p_s_reg_170 );

    SC_METHOD(thread_tmp_9_2_cast_cast_fu_254_p1);
    sensitive << ( j_1_fu_248_p2 );

    SC_METHOD(thread_tmp_9_cast_fu_243_p1);
    sensitive << ( tmp_9_fu_238_p2 );

    SC_METHOD(thread_tmp_9_fu_238_p2);
    sensitive << ( tmp_8_reg_483 );
    sensitive << ( tmp_2_cast_cast_fu_234_p1 );

    SC_METHOD(thread_tmp_fu_199_p2);
    sensitive << ( i_reg_147 );

    SC_METHOD(thread_tmp_s_fu_272_p3);
    sensitive << ( ii_reg_182 );

    SC_METHOD(thread_window_V_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( window_V_addr_1_reg_526 );
    sensitive << ( window_V_addr_2_reg_531 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_11_cast_fu_290_p1 );

    SC_METHOD(thread_window_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_193_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_218_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond3_fu_317_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "differentiate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, res_V_address0, "(port)res_V_address0");
    sc_trace(mVcdFile, res_V_ce0, "(port)res_V_ce0");
    sc_trace(mVcdFile, res_V_we0, "(port)res_V_we0");
    sc_trace(mVcdFile, res_V_d0, "(port)res_V_d0");
    sc_trace(mVcdFile, s_axi_diff_io_AWVALID, "(port)s_axi_diff_io_AWVALID");
    sc_trace(mVcdFile, s_axi_diff_io_AWREADY, "(port)s_axi_diff_io_AWREADY");
    sc_trace(mVcdFile, s_axi_diff_io_AWADDR, "(port)s_axi_diff_io_AWADDR");
    sc_trace(mVcdFile, s_axi_diff_io_WVALID, "(port)s_axi_diff_io_WVALID");
    sc_trace(mVcdFile, s_axi_diff_io_WREADY, "(port)s_axi_diff_io_WREADY");
    sc_trace(mVcdFile, s_axi_diff_io_WDATA, "(port)s_axi_diff_io_WDATA");
    sc_trace(mVcdFile, s_axi_diff_io_WSTRB, "(port)s_axi_diff_io_WSTRB");
    sc_trace(mVcdFile, s_axi_diff_io_ARVALID, "(port)s_axi_diff_io_ARVALID");
    sc_trace(mVcdFile, s_axi_diff_io_ARREADY, "(port)s_axi_diff_io_ARREADY");
    sc_trace(mVcdFile, s_axi_diff_io_ARADDR, "(port)s_axi_diff_io_ARADDR");
    sc_trace(mVcdFile, s_axi_diff_io_RVALID, "(port)s_axi_diff_io_RVALID");
    sc_trace(mVcdFile, s_axi_diff_io_RREADY, "(port)s_axi_diff_io_RREADY");
    sc_trace(mVcdFile, s_axi_diff_io_RDATA, "(port)s_axi_diff_io_RDATA");
    sc_trace(mVcdFile, s_axi_diff_io_RRESP, "(port)s_axi_diff_io_RRESP");
    sc_trace(mVcdFile, s_axi_diff_io_BVALID, "(port)s_axi_diff_io_BVALID");
    sc_trace(mVcdFile, s_axi_diff_io_BREADY, "(port)s_axi_diff_io_BREADY");
    sc_trace(mVcdFile, s_axi_diff_io_BRESP, "(port)s_axi_diff_io_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, img_address0, "img_address0");
    sc_trace(mVcdFile, img_ce0, "img_ce0");
    sc_trace(mVcdFile, img_q0, "img_q0");
    sc_trace(mVcdFile, window_V_address0, "window_V_address0");
    sc_trace(mVcdFile, window_V_ce0, "window_V_ce0");
    sc_trace(mVcdFile, window_V_q0, "window_V_q0");
    sc_trace(mVcdFile, tmp_fu_199_p2, "tmp_fu_199_p2");
    sc_trace(mVcdFile, tmp_reg_472, "tmp_reg_472");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond1_fu_193_p2, "exitcond1_fu_193_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_208_p2, "grp_fu_208_p2");
    sc_trace(mVcdFile, tmp_8_reg_483, "tmp_8_reg_483");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_cast4_cast_fu_214_p1, "j_cast4_cast_fu_214_p1");
    sc_trace(mVcdFile, j_cast4_cast_reg_488, "j_cast4_cast_reg_488");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_2_cast_cast3_fu_230_p1, "tmp_2_cast_cast3_fu_230_p1");
    sc_trace(mVcdFile, tmp_2_cast_cast3_reg_496, "tmp_2_cast_cast3_reg_496");
    sc_trace(mVcdFile, exitcond2_fu_218_p2, "exitcond2_fu_218_p2");
    sc_trace(mVcdFile, res_V_addr_reg_501, "res_V_addr_reg_501");
    sc_trace(mVcdFile, j_1_fu_248_p2, "j_1_fu_248_p2");
    sc_trace(mVcdFile, j_1_reg_506, "j_1_reg_506");
    sc_trace(mVcdFile, tmp_9_2_cast_cast_fu_254_p1, "tmp_9_2_cast_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_9_2_cast_cast_reg_511, "tmp_9_2_cast_cast_reg_511");
    sc_trace(mVcdFile, i_1_fu_258_p2, "i_1_fu_258_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, window_V_addr_1_reg_526, "window_V_addr_1_reg_526");
    sc_trace(mVcdFile, window_V_addr_2_reg_531, "window_V_addr_2_reg_531");
    sc_trace(mVcdFile, ii_1_fu_323_p2, "ii_1_fu_323_p2");
    sc_trace(mVcdFile, ii_1_reg_539, "ii_1_reg_539");
    sc_trace(mVcdFile, tmp_16_fu_364_p2, "tmp_16_fu_364_p2");
    sc_trace(mVcdFile, tmp_16_reg_544, "tmp_16_reg_544");
    sc_trace(mVcdFile, exitcond3_fu_317_p2, "exitcond3_fu_317_p2");
    sc_trace(mVcdFile, tmp_17_fu_369_p2, "tmp_17_fu_369_p2");
    sc_trace(mVcdFile, tmp_17_reg_549, "tmp_17_reg_549");
    sc_trace(mVcdFile, tmp_18_fu_374_p2, "tmp_18_fu_374_p2");
    sc_trace(mVcdFile, tmp_18_reg_554, "tmp_18_reg_554");
    sc_trace(mVcdFile, tmp_6_fu_379_p2, "tmp_6_fu_379_p2");
    sc_trace(mVcdFile, tmp_6_reg_559, "tmp_6_reg_559");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, window_V_load_reg_569, "window_V_load_reg_569");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, img_load_reg_579, "img_load_reg_579");
    sc_trace(mVcdFile, window_V_load_1_reg_584, "window_V_load_1_reg_584");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, img_load_1_reg_594, "img_load_1_reg_594");
    sc_trace(mVcdFile, window_V_load_2_reg_599, "window_V_load_2_reg_599");
    sc_trace(mVcdFile, img_load_2_reg_604, "img_load_2_reg_604");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, r_V_2_fu_403_p2, "r_V_2_fu_403_p2");
    sc_trace(mVcdFile, r_V_2_reg_609, "r_V_2_reg_609");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_452_p3, "grp_fu_452_p3");
    sc_trace(mVcdFile, tmp_5_reg_614, "tmp_5_reg_614");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, temp_result_V_1_2_fu_430_p2, "temp_result_V_1_2_fu_430_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, i_reg_147, "i_reg_147");
    sc_trace(mVcdFile, j_reg_159, "j_reg_159");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, p_s_reg_170, "p_s_reg_170");
    sc_trace(mVcdFile, ii_reg_182, "ii_reg_182");
    sc_trace(mVcdFile, tmp_9_cast_fu_243_p1, "tmp_9_cast_fu_243_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_290_p1, "tmp_11_cast_fu_290_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_301_p1, "tmp_12_cast_fu_301_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_312_p1, "tmp_13_cast_fu_312_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_385_p1, "tmp_17_cast_fu_385_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_389_p1, "tmp_18_cast_fu_389_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_393_p1, "tmp_19_cast_fu_393_p1");
    sc_trace(mVcdFile, grp_fu_208_p0, "grp_fu_208_p0");
    sc_trace(mVcdFile, grp_fu_208_p1, "grp_fu_208_p1");
    sc_trace(mVcdFile, tmp_2_fu_224_p2, "tmp_2_fu_224_p2");
    sc_trace(mVcdFile, tmp_2_cast_cast_fu_234_p1, "tmp_2_cast_cast_fu_234_p1");
    sc_trace(mVcdFile, tmp_9_fu_238_p2, "tmp_9_fu_238_p2");
    sc_trace(mVcdFile, tmp_s_fu_272_p3, "tmp_s_fu_272_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_280_p1, "p_shl_cast_fu_280_p1");
    sc_trace(mVcdFile, ii_cast2_cast_fu_268_p1, "ii_cast2_cast_fu_268_p1");
    sc_trace(mVcdFile, tmp_3_fu_284_p2, "tmp_3_fu_284_p2");
    sc_trace(mVcdFile, tmp_10_fu_295_p2, "tmp_10_fu_295_p2");
    sc_trace(mVcdFile, tmp_11_fu_306_p2, "tmp_11_fu_306_p2");
    sc_trace(mVcdFile, ii_cast3_fu_264_p1, "ii_cast3_fu_264_p1");
    sc_trace(mVcdFile, sum_fu_329_p2, "sum_fu_329_p2");
    sc_trace(mVcdFile, tmp_13_fu_334_p3, "tmp_13_fu_334_p3");
    sc_trace(mVcdFile, tmp_14_fu_346_p3, "tmp_14_fu_346_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_342_p1, "p_shl1_cast_fu_342_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_354_p1, "p_shl2_cast_fu_354_p1");
    sc_trace(mVcdFile, tmp_15_fu_358_p2, "tmp_15_fu_358_p2");
    sc_trace(mVcdFile, r_V_2_fu_403_p0, "r_V_2_fu_403_p0");
    sc_trace(mVcdFile, r_V_2_fu_403_p1, "r_V_2_fu_403_p1");
    sc_trace(mVcdFile, grp_fu_460_p3, "grp_fu_460_p3");
    sc_trace(mVcdFile, p_cast_fu_427_p1, "p_cast_fu_427_p1");
    sc_trace(mVcdFile, tmp_12_fu_436_p3, "tmp_12_fu_436_p3");
    sc_trace(mVcdFile, grp_fu_452_p1, "grp_fu_452_p1");
    sc_trace(mVcdFile, grp_fu_460_p1, "grp_fu_460_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_208_p00, "grp_fu_208_p00");
    sc_trace(mVcdFile, grp_fu_452_p10, "grp_fu_452_p10");
    sc_trace(mVcdFile, grp_fu_460_p10, "grp_fu_460_p10");
    sc_trace(mVcdFile, r_V_2_fu_403_p10, "r_V_2_fu_403_p10");
#endif

    }
    mHdltvinHandle.open("differentiate.hdltvin.dat");
    mHdltvoutHandle.open("differentiate.hdltvout.dat");
}

differentiate::~differentiate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete differentiate_diff_io_s_axi_U;
    delete differentiate_mulbkb_U0;
    delete differentiate_maccud_U1;
    delete differentiate_macdEe_U2;
}

void differentiate::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void differentiate::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_218_p2.read(), ap_const_lv1_1))) {
        i_reg_147 = i_1_fu_258_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_147 = ap_const_lv6_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ii_reg_182 = ii_1_reg_539.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_218_p2.read()))) {
        ii_reg_182 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j_reg_159 = j_1_reg_506.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_159 = ap_const_lv6_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_s_reg_170 = temp_result_V_1_2_fu_430_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_218_p2.read()))) {
        p_s_reg_170 = ap_const_lv15_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ii_1_reg_539 = ii_1_fu_323_p2.read();
        window_V_addr_1_reg_526 =  (sc_lv<4>) (tmp_12_cast_fu_301_p1.read());
        window_V_addr_2_reg_531 =  (sc_lv<4>) (tmp_13_cast_fu_312_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        img_load_1_reg_594 = img_q0.read();
        window_V_load_2_reg_599 = window_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        img_load_2_reg_604 = img_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        img_load_reg_579 = img_q0.read();
        window_V_load_1_reg_584 = window_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_218_p2.read()))) {
        j_1_reg_506 = j_1_fu_248_p2.read();
        res_V_addr_reg_501 =  (sc_lv<12>) (tmp_9_cast_fu_243_p1.read());
        tmp_2_cast_cast3_reg_496 = tmp_2_cast_cast3_fu_230_p1.read();
        tmp_9_2_cast_cast_reg_511 = tmp_9_2_cast_cast_fu_254_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_cast4_cast_reg_488 = j_cast4_cast_fu_214_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_V_2_reg_609 = r_V_2_fu_403_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_317_p2.read()))) {
        tmp_16_reg_544 = tmp_16_fu_364_p2.read();
        tmp_17_reg_549 = tmp_17_fu_369_p2.read();
        tmp_18_reg_554 = tmp_18_fu_374_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_5_reg_614 = grp_fu_452_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_317_p2.read()))) {
        tmp_6_reg_559 = tmp_6_fu_379_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_8_reg_483 = grp_fu_208_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_193_p2.read(), ap_const_lv1_0))) {
        tmp_reg_472 = tmp_fu_199_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        window_V_load_reg_569 = window_V_q0.read();
    }
}

void differentiate::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void differentiate::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void differentiate::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void differentiate::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void differentiate::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void differentiate::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void differentiate::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void differentiate::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void differentiate::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void differentiate::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void differentiate::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void differentiate::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void differentiate::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void differentiate::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void differentiate::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_193_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void differentiate::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void differentiate::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_193_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void differentiate::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void differentiate::thread_exitcond1_fu_193_p2() {
    exitcond1_fu_193_p2 = (!i_reg_147.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_147.read() == ap_const_lv6_3F);
}

void differentiate::thread_exitcond2_fu_218_p2() {
    exitcond2_fu_218_p2 = (!j_reg_159.read().is_01() || !ap_const_lv6_2F.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_159.read() == ap_const_lv6_2F);
}

void differentiate::thread_exitcond3_fu_317_p2() {
    exitcond3_fu_317_p2 = (!ii_reg_182.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ii_reg_182.read() == ap_const_lv2_3);
}

void differentiate::thread_grp_fu_208_p0() {
    grp_fu_208_p0 =  (sc_lv<6>) (grp_fu_208_p00.read());
}

void differentiate::thread_grp_fu_208_p00() {
    grp_fu_208_p00 = esl_zext<12,6>(tmp_reg_472.read());
}

void differentiate::thread_grp_fu_208_p1() {
    grp_fu_208_p1 =  (sc_lv<7>) (ap_const_lv12_2E);
}

void differentiate::thread_grp_fu_452_p1() {
    grp_fu_452_p1 =  (sc_lv<8>) (grp_fu_452_p10.read());
}

void differentiate::thread_grp_fu_452_p10() {
    grp_fu_452_p10 = esl_zext<11,8>(img_load_reg_579.read());
}

void differentiate::thread_grp_fu_460_p1() {
    grp_fu_460_p1 =  (sc_lv<8>) (grp_fu_460_p10.read());
}

void differentiate::thread_grp_fu_460_p10() {
    grp_fu_460_p10 = esl_zext<11,8>(img_load_1_reg_594.read());
}

void differentiate::thread_i_1_fu_258_p2() {
    i_1_fu_258_p2 = (!i_reg_147.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_147.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void differentiate::thread_ii_1_fu_323_p2() {
    ii_1_fu_323_p2 = (!ii_reg_182.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ii_reg_182.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void differentiate::thread_ii_cast2_cast_fu_268_p1() {
    ii_cast2_cast_fu_268_p1 = esl_zext<5,2>(ii_reg_182.read());
}

void differentiate::thread_ii_cast3_fu_264_p1() {
    ii_cast3_fu_264_p1 = esl_zext<6,2>(ii_reg_182.read());
}

void differentiate::thread_img_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        img_address0 =  (sc_lv<12>) (tmp_19_cast_fu_393_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        img_address0 =  (sc_lv<12>) (tmp_18_cast_fu_389_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        img_address0 =  (sc_lv<12>) (tmp_17_cast_fu_385_p1.read());
    } else {
        img_address0 = "XXXXXXXXXXXX";
    }
}

void differentiate::thread_img_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        img_ce0 = ap_const_logic_1;
    } else {
        img_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_j_1_fu_248_p2() {
    j_1_fu_248_p2 = (!j_reg_159.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_159.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void differentiate::thread_j_cast4_cast_fu_214_p1() {
    j_cast4_cast_fu_214_p1 = esl_zext<13,6>(j_reg_159.read());
}

void differentiate::thread_p_cast_fu_427_p1() {
    p_cast_fu_427_p1 = esl_sext<15,13>(tmp_5_reg_614.read());
}

void differentiate::thread_p_shl1_cast_fu_342_p1() {
    p_shl1_cast_fu_342_p1 = esl_zext<13,12>(tmp_13_fu_334_p3.read());
}

void differentiate::thread_p_shl2_cast_fu_354_p1() {
    p_shl2_cast_fu_354_p1 = esl_zext<13,10>(tmp_14_fu_346_p3.read());
}

void differentiate::thread_p_shl_cast_fu_280_p1() {
    p_shl_cast_fu_280_p1 = esl_zext<5,4>(tmp_s_fu_272_p3.read());
}

void differentiate::thread_r_V_2_fu_403_p0() {
    r_V_2_fu_403_p0 = window_V_load_2_reg_599.read();
}

void differentiate::thread_r_V_2_fu_403_p1() {
    r_V_2_fu_403_p1 =  (sc_lv<8>) (r_V_2_fu_403_p10.read());
}

void differentiate::thread_r_V_2_fu_403_p10() {
    r_V_2_fu_403_p10 = esl_zext<11,8>(img_load_2_reg_604.read());
}

void differentiate::thread_r_V_2_fu_403_p2() {
    r_V_2_fu_403_p2 = (!r_V_2_fu_403_p0.read().is_01() || !r_V_2_fu_403_p1.read().is_01())? sc_lv<11>(): sc_bigint<3>(r_V_2_fu_403_p0.read()) * sc_biguint<8>(r_V_2_fu_403_p1.read());
}

void differentiate::thread_res_V_address0() {
    res_V_address0 = res_V_addr_reg_501.read();
}

void differentiate::thread_res_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        res_V_ce0 = ap_const_logic_1;
    } else {
        res_V_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_res_V_d0() {
    res_V_d0 = (!tmp_12_fu_436_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_12_fu_436_p3.read()[0].to_bool())? tmp_6_reg_559.read(): p_s_reg_170.read());
}

void differentiate::thread_res_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        res_V_we0 = ap_const_logic_1;
    } else {
        res_V_we0 = ap_const_logic_0;
    }
}

void differentiate::thread_sum_fu_329_p2() {
    sum_fu_329_p2 = (!tmp_reg_472.read().is_01() || !ii_cast3_fu_264_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_reg_472.read()) + sc_biguint<6>(ii_cast3_fu_264_p1.read()));
}

void differentiate::thread_temp_result_V_1_2_fu_430_p2() {
    temp_result_V_1_2_fu_430_p2 = (!p_cast_fu_427_p1.read().is_01() || !p_s_reg_170.read().is_01())? sc_lv<15>(): (sc_bigint<15>(p_cast_fu_427_p1.read()) + sc_biguint<15>(p_s_reg_170.read()));
}

void differentiate::thread_tmp_10_fu_295_p2() {
    tmp_10_fu_295_p2 = (!tmp_3_fu_284_p2.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_fu_284_p2.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void differentiate::thread_tmp_11_cast_fu_290_p1() {
    tmp_11_cast_fu_290_p1 = esl_sext<32,5>(tmp_3_fu_284_p2.read());
}

void differentiate::thread_tmp_11_fu_306_p2() {
    tmp_11_fu_306_p2 = (!tmp_3_fu_284_p2.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_fu_284_p2.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void differentiate::thread_tmp_12_cast_fu_301_p1() {
    tmp_12_cast_fu_301_p1 = esl_sext<32,5>(tmp_10_fu_295_p2.read());
}

void differentiate::thread_tmp_12_fu_436_p3() {
    tmp_12_fu_436_p3 = p_s_reg_170.read().range(14, 14);
}

void differentiate::thread_tmp_13_cast_fu_312_p1() {
    tmp_13_cast_fu_312_p1 = esl_sext<32,5>(tmp_11_fu_306_p2.read());
}

void differentiate::thread_tmp_13_fu_334_p3() {
    tmp_13_fu_334_p3 = esl_concat<6,6>(sum_fu_329_p2.read(), ap_const_lv6_0);
}

void differentiate::thread_tmp_14_fu_346_p3() {
    tmp_14_fu_346_p3 = esl_concat<6,4>(sum_fu_329_p2.read(), ap_const_lv4_0);
}

void differentiate::thread_tmp_15_fu_358_p2() {
    tmp_15_fu_358_p2 = (!p_shl1_cast_fu_342_p1.read().is_01() || !p_shl2_cast_fu_354_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl1_cast_fu_342_p1.read()) - sc_biguint<13>(p_shl2_cast_fu_354_p1.read()));
}

void differentiate::thread_tmp_16_fu_364_p2() {
    tmp_16_fu_364_p2 = (!tmp_15_fu_358_p2.read().is_01() || !tmp_2_cast_cast3_reg_496.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_15_fu_358_p2.read()) + sc_biguint<13>(tmp_2_cast_cast3_reg_496.read()));
}

void differentiate::thread_tmp_17_cast_fu_385_p1() {
    tmp_17_cast_fu_385_p1 = esl_sext<32,13>(tmp_16_reg_544.read());
}

void differentiate::thread_tmp_17_fu_369_p2() {
    tmp_17_fu_369_p2 = (!tmp_15_fu_358_p2.read().is_01() || !j_cast4_cast_reg_488.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_15_fu_358_p2.read()) + sc_biguint<13>(j_cast4_cast_reg_488.read()));
}

void differentiate::thread_tmp_18_cast_fu_389_p1() {
    tmp_18_cast_fu_389_p1 = esl_sext<32,13>(tmp_17_reg_549.read());
}

void differentiate::thread_tmp_18_fu_374_p2() {
    tmp_18_fu_374_p2 = (!tmp_15_fu_358_p2.read().is_01() || !tmp_9_2_cast_cast_reg_511.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_15_fu_358_p2.read()) + sc_biguint<13>(tmp_9_2_cast_cast_reg_511.read()));
}

void differentiate::thread_tmp_19_cast_fu_393_p1() {
    tmp_19_cast_fu_393_p1 = esl_sext<32,13>(tmp_18_reg_554.read());
}

void differentiate::thread_tmp_2_cast_cast3_fu_230_p1() {
    tmp_2_cast_cast3_fu_230_p1 = esl_zext<13,6>(tmp_2_fu_224_p2.read());
}

void differentiate::thread_tmp_2_cast_cast_fu_234_p1() {
    tmp_2_cast_cast_fu_234_p1 = esl_zext<12,6>(tmp_2_fu_224_p2.read());
}

void differentiate::thread_tmp_2_fu_224_p2() {
    tmp_2_fu_224_p2 = (!j_reg_159.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_159.read()) + sc_bigint<6>(ap_const_lv6_3F));
}

void differentiate::thread_tmp_3_fu_284_p2() {
    tmp_3_fu_284_p2 = (!p_shl_cast_fu_280_p1.read().is_01() || !ii_cast2_cast_fu_268_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_280_p1.read()) - sc_biguint<5>(ii_cast2_cast_fu_268_p1.read()));
}

void differentiate::thread_tmp_6_fu_379_p2() {
    tmp_6_fu_379_p2 = (!ap_const_lv15_0.is_01() || !p_s_reg_170.read().is_01())? sc_lv<15>(): (sc_biguint<15>(ap_const_lv15_0) - sc_biguint<15>(p_s_reg_170.read()));
}

void differentiate::thread_tmp_9_2_cast_cast_fu_254_p1() {
    tmp_9_2_cast_cast_fu_254_p1 = esl_zext<13,6>(j_1_fu_248_p2.read());
}

void differentiate::thread_tmp_9_cast_fu_243_p1() {
    tmp_9_cast_fu_243_p1 = esl_zext<32,12>(tmp_9_fu_238_p2.read());
}

void differentiate::thread_tmp_9_fu_238_p2() {
    tmp_9_fu_238_p2 = (!tmp_8_reg_483.read().is_01() || !tmp_2_cast_cast_fu_234_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_8_reg_483.read()) + sc_biguint<12>(tmp_2_cast_cast_fu_234_p1.read()));
}

void differentiate::thread_tmp_fu_199_p2() {
    tmp_fu_199_p2 = (!i_reg_147.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_147.read()) + sc_bigint<6>(ap_const_lv6_3F));
}

void differentiate::thread_tmp_s_fu_272_p3() {
    tmp_s_fu_272_p3 = esl_concat<2,2>(ii_reg_182.read(), ap_const_lv2_0);
}

void differentiate::thread_window_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        window_V_address0 = window_V_addr_2_reg_531.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        window_V_address0 = window_V_addr_1_reg_526.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        window_V_address0 =  (sc_lv<4>) (tmp_11_cast_fu_290_p1.read());
    } else {
        window_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void differentiate::thread_window_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        window_V_ce0 = ap_const_logic_1;
    } else {
        window_V_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_193_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_218_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_317_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

void differentiate::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"res_V_address0\" :  \"" << res_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_ce0\" :  \"" << res_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_we0\" :  \"" << res_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_d0\" :  \"" << res_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_AWVALID\" :  \"" << s_axi_diff_io_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_AWREADY\" :  \"" << s_axi_diff_io_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_AWADDR\" :  \"" << s_axi_diff_io_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_WVALID\" :  \"" << s_axi_diff_io_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_WREADY\" :  \"" << s_axi_diff_io_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_WDATA\" :  \"" << s_axi_diff_io_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_WSTRB\" :  \"" << s_axi_diff_io_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_ARVALID\" :  \"" << s_axi_diff_io_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_ARREADY\" :  \"" << s_axi_diff_io_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_ARADDR\" :  \"" << s_axi_diff_io_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_RVALID\" :  \"" << s_axi_diff_io_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_RREADY\" :  \"" << s_axi_diff_io_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_RDATA\" :  \"" << s_axi_diff_io_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_RRESP\" :  \"" << s_axi_diff_io_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_BVALID\" :  \"" << s_axi_diff_io_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_diff_io_BREADY\" :  \"" << s_axi_diff_io_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_diff_io_BRESP\" :  \"" << s_axi_diff_io_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

