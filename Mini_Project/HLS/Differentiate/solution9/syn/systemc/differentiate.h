// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _differentiate_HH_
#define _differentiate_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "differentiate_mulbkb.h"
#include "differentiate_maccud.h"
#include "differentiate_macdEe.h"
#include "differentiate_diff_io_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_DIFF_IO_ADDR_WIDTH = 14,
         unsigned int C_S_AXI_DIFF_IO_DATA_WIDTH = 32>
struct differentiate : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<12> > res_V_address0;
    sc_out< sc_logic > res_V_ce0;
    sc_out< sc_logic > res_V_we0;
    sc_out< sc_lv<15> > res_V_d0;
    sc_in< sc_logic > s_axi_diff_io_AWVALID;
    sc_out< sc_logic > s_axi_diff_io_AWREADY;
    sc_in< sc_uint<C_S_AXI_DIFF_IO_ADDR_WIDTH> > s_axi_diff_io_AWADDR;
    sc_in< sc_logic > s_axi_diff_io_WVALID;
    sc_out< sc_logic > s_axi_diff_io_WREADY;
    sc_in< sc_uint<C_S_AXI_DIFF_IO_DATA_WIDTH> > s_axi_diff_io_WDATA;
    sc_in< sc_uint<C_S_AXI_DIFF_IO_DATA_WIDTH/8> > s_axi_diff_io_WSTRB;
    sc_in< sc_logic > s_axi_diff_io_ARVALID;
    sc_out< sc_logic > s_axi_diff_io_ARREADY;
    sc_in< sc_uint<C_S_AXI_DIFF_IO_ADDR_WIDTH> > s_axi_diff_io_ARADDR;
    sc_out< sc_logic > s_axi_diff_io_RVALID;
    sc_in< sc_logic > s_axi_diff_io_RREADY;
    sc_out< sc_uint<C_S_AXI_DIFF_IO_DATA_WIDTH> > s_axi_diff_io_RDATA;
    sc_out< sc_lv<2> > s_axi_diff_io_RRESP;
    sc_out< sc_logic > s_axi_diff_io_BVALID;
    sc_in< sc_logic > s_axi_diff_io_BREADY;
    sc_out< sc_lv<2> > s_axi_diff_io_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    differentiate(sc_module_name name);
    SC_HAS_PROCESS(differentiate);

    ~differentiate();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    differentiate_diff_io_s_axi<C_S_AXI_DIFF_IO_ADDR_WIDTH,C_S_AXI_DIFF_IO_DATA_WIDTH>* differentiate_diff_io_s_axi_U;
    differentiate_mulbkb<1,2,6,7,12>* differentiate_mulbkb_U0;
    differentiate_maccud<1,1,3,8,12,13>* differentiate_maccud_U1;
    differentiate_macdEe<1,1,3,8,11,12>* differentiate_macdEe_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<12> > img_address0;
    sc_signal< sc_logic > img_ce0;
    sc_signal< sc_lv<8> > img_q0;
    sc_signal< sc_lv<4> > window_V_address0;
    sc_signal< sc_logic > window_V_ce0;
    sc_signal< sc_lv<3> > window_V_q0;
    sc_signal< sc_lv<6> > tmp_fu_199_p2;
    sc_signal< sc_lv<6> > tmp_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond1_fu_193_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<12> > grp_fu_208_p2;
    sc_signal< sc_lv<12> > tmp_8_reg_483;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<13> > j_cast4_cast_fu_214_p1;
    sc_signal< sc_lv<13> > j_cast4_cast_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<13> > tmp_2_cast_cast3_fu_230_p1;
    sc_signal< sc_lv<13> > tmp_2_cast_cast3_reg_496;
    sc_signal< sc_lv<1> > exitcond2_fu_218_p2;
    sc_signal< sc_lv<12> > res_V_addr_reg_501;
    sc_signal< sc_lv<6> > j_1_fu_248_p2;
    sc_signal< sc_lv<6> > j_1_reg_506;
    sc_signal< sc_lv<13> > tmp_9_2_cast_cast_fu_254_p1;
    sc_signal< sc_lv<13> > tmp_9_2_cast_cast_reg_511;
    sc_signal< sc_lv<6> > i_1_fu_258_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > window_V_addr_1_reg_526;
    sc_signal< sc_lv<4> > window_V_addr_2_reg_531;
    sc_signal< sc_lv<2> > ii_1_fu_323_p2;
    sc_signal< sc_lv<2> > ii_1_reg_539;
    sc_signal< sc_lv<13> > tmp_16_fu_364_p2;
    sc_signal< sc_lv<13> > tmp_16_reg_544;
    sc_signal< sc_lv<1> > exitcond3_fu_317_p2;
    sc_signal< sc_lv<13> > tmp_17_fu_369_p2;
    sc_signal< sc_lv<13> > tmp_17_reg_549;
    sc_signal< sc_lv<13> > tmp_18_fu_374_p2;
    sc_signal< sc_lv<13> > tmp_18_reg_554;
    sc_signal< sc_lv<15> > tmp_6_fu_379_p2;
    sc_signal< sc_lv<15> > tmp_6_reg_559;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > window_V_load_reg_569;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > img_load_reg_579;
    sc_signal< sc_lv<3> > window_V_load_1_reg_584;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > img_load_1_reg_594;
    sc_signal< sc_lv<3> > window_V_load_2_reg_599;
    sc_signal< sc_lv<8> > img_load_2_reg_604;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<11> > r_V_2_fu_403_p2;
    sc_signal< sc_lv<11> > r_V_2_reg_609;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<13> > grp_fu_452_p3;
    sc_signal< sc_lv<13> > tmp_5_reg_614;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<15> > temp_result_V_1_2_fu_430_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<6> > i_reg_147;
    sc_signal< sc_lv<6> > j_reg_159;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<15> > p_s_reg_170;
    sc_signal< sc_lv<2> > ii_reg_182;
    sc_signal< sc_lv<32> > tmp_9_cast_fu_243_p1;
    sc_signal< sc_lv<32> > tmp_11_cast_fu_290_p1;
    sc_signal< sc_lv<32> > tmp_12_cast_fu_301_p1;
    sc_signal< sc_lv<32> > tmp_13_cast_fu_312_p1;
    sc_signal< sc_lv<32> > tmp_17_cast_fu_385_p1;
    sc_signal< sc_lv<32> > tmp_18_cast_fu_389_p1;
    sc_signal< sc_lv<32> > tmp_19_cast_fu_393_p1;
    sc_signal< sc_lv<6> > grp_fu_208_p0;
    sc_signal< sc_lv<7> > grp_fu_208_p1;
    sc_signal< sc_lv<6> > tmp_2_fu_224_p2;
    sc_signal< sc_lv<12> > tmp_2_cast_cast_fu_234_p1;
    sc_signal< sc_lv<12> > tmp_9_fu_238_p2;
    sc_signal< sc_lv<4> > tmp_s_fu_272_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_280_p1;
    sc_signal< sc_lv<5> > ii_cast2_cast_fu_268_p1;
    sc_signal< sc_lv<5> > tmp_3_fu_284_p2;
    sc_signal< sc_lv<5> > tmp_10_fu_295_p2;
    sc_signal< sc_lv<5> > tmp_11_fu_306_p2;
    sc_signal< sc_lv<6> > ii_cast3_fu_264_p1;
    sc_signal< sc_lv<6> > sum_fu_329_p2;
    sc_signal< sc_lv<12> > tmp_13_fu_334_p3;
    sc_signal< sc_lv<10> > tmp_14_fu_346_p3;
    sc_signal< sc_lv<13> > p_shl1_cast_fu_342_p1;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_354_p1;
    sc_signal< sc_lv<13> > tmp_15_fu_358_p2;
    sc_signal< sc_lv<3> > r_V_2_fu_403_p0;
    sc_signal< sc_lv<8> > r_V_2_fu_403_p1;
    sc_signal< sc_lv<12> > grp_fu_460_p3;
    sc_signal< sc_lv<15> > p_cast_fu_427_p1;
    sc_signal< sc_lv<1> > tmp_12_fu_436_p3;
    sc_signal< sc_lv<8> > grp_fu_452_p1;
    sc_signal< sc_lv<8> > grp_fu_460_p1;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< sc_lv<12> > grp_fu_208_p00;
    sc_signal< sc_lv<11> > grp_fu_452_p10;
    sc_signal< sc_lv<11> > grp_fu_460_p10;
    sc_signal< sc_lv<11> > r_V_2_fu_403_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<12> ap_const_lv12_2E;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond1_fu_193_p2();
    void thread_exitcond2_fu_218_p2();
    void thread_exitcond3_fu_317_p2();
    void thread_grp_fu_208_p0();
    void thread_grp_fu_208_p00();
    void thread_grp_fu_208_p1();
    void thread_grp_fu_452_p1();
    void thread_grp_fu_452_p10();
    void thread_grp_fu_460_p1();
    void thread_grp_fu_460_p10();
    void thread_i_1_fu_258_p2();
    void thread_ii_1_fu_323_p2();
    void thread_ii_cast2_cast_fu_268_p1();
    void thread_ii_cast3_fu_264_p1();
    void thread_img_address0();
    void thread_img_ce0();
    void thread_j_1_fu_248_p2();
    void thread_j_cast4_cast_fu_214_p1();
    void thread_p_cast_fu_427_p1();
    void thread_p_shl1_cast_fu_342_p1();
    void thread_p_shl2_cast_fu_354_p1();
    void thread_p_shl_cast_fu_280_p1();
    void thread_r_V_2_fu_403_p0();
    void thread_r_V_2_fu_403_p1();
    void thread_r_V_2_fu_403_p10();
    void thread_r_V_2_fu_403_p2();
    void thread_res_V_address0();
    void thread_res_V_ce0();
    void thread_res_V_d0();
    void thread_res_V_we0();
    void thread_sum_fu_329_p2();
    void thread_temp_result_V_1_2_fu_430_p2();
    void thread_tmp_10_fu_295_p2();
    void thread_tmp_11_cast_fu_290_p1();
    void thread_tmp_11_fu_306_p2();
    void thread_tmp_12_cast_fu_301_p1();
    void thread_tmp_12_fu_436_p3();
    void thread_tmp_13_cast_fu_312_p1();
    void thread_tmp_13_fu_334_p3();
    void thread_tmp_14_fu_346_p3();
    void thread_tmp_15_fu_358_p2();
    void thread_tmp_16_fu_364_p2();
    void thread_tmp_17_cast_fu_385_p1();
    void thread_tmp_17_fu_369_p2();
    void thread_tmp_18_cast_fu_389_p1();
    void thread_tmp_18_fu_374_p2();
    void thread_tmp_19_cast_fu_393_p1();
    void thread_tmp_2_cast_cast3_fu_230_p1();
    void thread_tmp_2_cast_cast_fu_234_p1();
    void thread_tmp_2_fu_224_p2();
    void thread_tmp_3_fu_284_p2();
    void thread_tmp_6_fu_379_p2();
    void thread_tmp_9_2_cast_cast_fu_254_p1();
    void thread_tmp_9_cast_fu_243_p1();
    void thread_tmp_9_fu_238_p2();
    void thread_tmp_fu_199_p2();
    void thread_tmp_s_fu_272_p3();
    void thread_window_V_address0();
    void thread_window_V_ce0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
