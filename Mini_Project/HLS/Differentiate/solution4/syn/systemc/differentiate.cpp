// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "differentiate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic differentiate::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic differentiate::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> differentiate::ap_ST_fsm_state1 = "1";
const sc_lv<6> differentiate::ap_ST_fsm_state2 = "10";
const sc_lv<6> differentiate::ap_ST_fsm_state3 = "100";
const sc_lv<6> differentiate::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<6> differentiate::ap_ST_fsm_pp0_stage1 = "10000";
const sc_lv<6> differentiate::ap_ST_fsm_state12 = "100000";
const sc_lv<32> differentiate::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool differentiate::ap_const_boolean_1 = true;
const sc_lv<32> differentiate::ap_const_lv32_3 = "11";
const bool differentiate::ap_const_boolean_0 = false;
const sc_lv<1> differentiate::ap_const_lv1_0 = "0";
const sc_lv<32> differentiate::ap_const_lv32_4 = "100";
const sc_lv<32> differentiate::ap_const_lv32_1 = "1";
const sc_lv<32> differentiate::ap_const_lv32_2 = "10";
const sc_lv<1> differentiate::ap_const_lv1_1 = "1";
const sc_lv<12> differentiate::ap_const_lv12_0 = "000000000000";
const sc_lv<32> differentiate::ap_const_lv32_5 = "101";
const sc_lv<6> differentiate::ap_const_lv6_1 = "1";
const sc_lv<15> differentiate::ap_const_lv15_0 = "000000000000000";
const sc_lv<2> differentiate::ap_const_lv2_0 = "00";
const sc_lv<12> differentiate::ap_const_lv12_B24 = "101100100100";
const sc_lv<12> differentiate::ap_const_lv12_1 = "1";
const sc_lv<6> differentiate::ap_const_lv6_2F = "101111";
const sc_lv<6> differentiate::ap_const_lv6_3F = "111111";
const sc_lv<2> differentiate::ap_const_lv2_3 = "11";
const sc_lv<2> differentiate::ap_const_lv2_1 = "1";
const sc_lv<6> differentiate::ap_const_lv6_0 = "000000";
const sc_lv<4> differentiate::ap_const_lv4_0 = "0000";
const sc_lv<5> differentiate::ap_const_lv5_1 = "1";
const sc_lv<5> differentiate::ap_const_lv5_2 = "10";
const sc_lv<32> differentiate::ap_const_lv32_E = "1110";
const sc_lv<12> differentiate::ap_const_lv12_2E = "101110";

differentiate::differentiate(sc_module_name name) : sc_module(name), mVcdFile(0) {
    differentiate_macbkb_U0 = new differentiate_macbkb<1,1,6,7,6,12>("differentiate_macbkb_U0");
    differentiate_macbkb_U0->din0(grp_fu_488_p0);
    differentiate_macbkb_U0->din1(grp_fu_488_p1);
    differentiate_macbkb_U0->din2(grp_fu_488_p2);
    differentiate_macbkb_U0->dout(grp_fu_488_p3);
    differentiate_maccud_U1 = new differentiate_maccud<1,1,3,8,11,12>("differentiate_maccud_U1");
    differentiate_maccud_U1->din0(window_V_load_1_reg_622);
    differentiate_maccud_U1->din1(grp_fu_497_p1);
    differentiate_maccud_U1->din2(r_V_2_reg_642);
    differentiate_maccud_U1->dout(grp_fu_497_p3);
    differentiate_macdEe_U2 = new differentiate_macdEe<1,1,3,8,12,13>("differentiate_macdEe_U2");
    differentiate_macdEe_U2->din0(window_V_load_reg_637);
    differentiate_macdEe_U2->din1(grp_fu_505_p1);
    differentiate_macdEe_U2->din2(tmp1_reg_652);
    differentiate_macdEe_U2->dout(grp_fu_505_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond3_fu_299_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_213_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_213_p2 );

    SC_METHOD(thread_exitcond3_fu_299_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ii_phi_fu_202_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_213_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten_reg_153 );

    SC_METHOD(thread_exitcond_fu_231_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_213_p2 );
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_grp_fu_488_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_488_p00 );

    SC_METHOD(thread_grp_fu_488_p00);
    sensitive << ( tmp_mid2_reg_529 );

    SC_METHOD(thread_grp_fu_488_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_488_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_488_p20 );

    SC_METHOD(thread_grp_fu_488_p20);
    sensitive << ( tmp_2_fu_273_p2 );

    SC_METHOD(thread_grp_fu_497_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_reg_pp0_iter1_exitcond3_reg_565 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( grp_fu_497_p10 );

    SC_METHOD(thread_grp_fu_497_p10);
    sensitive << ( reg_209 );

    SC_METHOD(thread_grp_fu_505_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_reg_pp0_iter2_exitcond3_reg_565 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( grp_fu_505_p10 );

    SC_METHOD(thread_grp_fu_505_p10);
    sensitive << ( img_load_reg_647 );

    SC_METHOD(thread_i_1_fu_225_p2);
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_i_mid2_fu_259_p3);
    sensitive << ( i_reg_164 );
    sensitive << ( exitcond_fu_231_p2 );
    sensitive << ( i_1_fu_225_p2 );

    SC_METHOD(thread_ifzero_fu_372_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( exitcond3_fu_299_p2 );
    sensitive << ( ii_1_fu_305_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ii_1_fu_305_p2);
    sensitive << ( ii_phi_fu_202_p4 );

    SC_METHOD(thread_ii_cast2_cast_fu_315_p1);
    sensitive << ( ii_phi_fu_202_p4 );

    SC_METHOD(thread_ii_cast3_fu_311_p1);
    sensitive << ( ii_phi_fu_202_p4 );

    SC_METHOD(thread_ii_phi_fu_202_p4);
    sensitive << ( ii_reg_198 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond3_reg_565 );
    sensitive << ( ii_1_reg_569 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_img_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_19_cast_fu_402_p1 );
    sensitive << ( tmp_18_cast_fu_419_p1 );

    SC_METHOD(thread_img_address1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_17_cast_fu_424_p1 );

    SC_METHOD(thread_img_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_img_ce1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );

    SC_METHOD(thread_indvar_flatten_next_fu_219_p2);
    sensitive << ( indvar_flatten_reg_153 );

    SC_METHOD(thread_j_1_fu_290_p2);
    sensitive << ( j_mid2_reg_522 );

    SC_METHOD(thread_j_cast4_cast_fu_270_p1);
    sensitive << ( j_mid2_reg_522 );

    SC_METHOD(thread_j_mid2_fu_237_p3);
    sensitive << ( j_reg_175 );
    sensitive << ( exitcond_fu_231_p2 );

    SC_METHOD(thread_p_cast_fu_460_p1);
    sensitive << ( grp_fu_505_p3 );

    SC_METHOD(thread_p_s_phi_fu_190_p4);
    sensitive << ( p_s_reg_186 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_reg_pp0_iter3_exitcond3_reg_565 );
    sensitive << ( temp_result_V_1_2_reg_657 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_p_shl1_cast_fu_362_p1);
    sensitive << ( tmp_13_fu_354_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_327_p1);
    sensitive << ( tmp_s_fu_319_p3 );

    SC_METHOD(thread_p_shl_cast_fu_350_p1);
    sensitive << ( tmp_12_fu_342_p3 );

    SC_METHOD(thread_r_V_2_fu_435_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( window_V_load_2_reg_627 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_r_V_2_fu_435_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( r_V_2_fu_435_p10 );

    SC_METHOD(thread_r_V_2_fu_435_p10);
    sensitive << ( reg_209 );

    SC_METHOD(thread_r_V_2_fu_435_p2);
    sensitive << ( r_V_2_fu_435_p0 );
    sensitive << ( r_V_2_fu_435_p1 );

    SC_METHOD(thread_res_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( res_V_addr_reg_550 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_res_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_res_V_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_7_reg_665 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_res_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_reg_pp0_iter3_ifzero_reg_588 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_sum_fu_337_p2);
    sensitive << ( tmp_mid2_reg_529 );
    sensitive << ( ii_cast3_fu_311_p1 );

    SC_METHOD(thread_temp_result_V_1_2_fu_463_p2);
    sensitive << ( p_s_phi_fu_190_p4 );
    sensitive << ( p_cast_fu_460_p1 );

    SC_METHOD(thread_tmp3_fu_245_p2);
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_tmp_10_fu_378_p2);
    sensitive << ( tmp_3_reg_574 );

    SC_METHOD(thread_tmp_11_cast_fu_407_p1);
    sensitive << ( tmp_3_reg_574 );

    SC_METHOD(thread_tmp_11_fu_388_p2);
    sensitive << ( tmp_3_reg_574 );

    SC_METHOD(thread_tmp_12_cast_fu_383_p1);
    sensitive << ( tmp_10_fu_378_p2 );

    SC_METHOD(thread_tmp_12_fu_342_p3);
    sensitive << ( sum_fu_337_p2 );

    SC_METHOD(thread_tmp_13_cast_fu_393_p1);
    sensitive << ( tmp_11_fu_388_p2 );

    SC_METHOD(thread_tmp_13_fu_354_p3);
    sensitive << ( sum_fu_337_p2 );

    SC_METHOD(thread_tmp_14_fu_366_p2);
    sensitive << ( p_shl_cast_fu_350_p1 );
    sensitive << ( p_shl1_cast_fu_362_p1 );

    SC_METHOD(thread_tmp_15_fu_411_p2);
    sensitive << ( tmp_2_cast_cast7_reg_545 );
    sensitive << ( tmp_14_reg_581 );

    SC_METHOD(thread_tmp_16_fu_415_p2);
    sensitive << ( j_cast4_cast_reg_540 );
    sensitive << ( tmp_14_reg_581 );

    SC_METHOD(thread_tmp_17_cast_fu_424_p1);
    sensitive << ( tmp_15_reg_612 );

    SC_METHOD(thread_tmp_17_fu_398_p2);
    sensitive << ( tmp_9_2_cast_cast_reg_560 );
    sensitive << ( tmp_14_reg_581 );

    SC_METHOD(thread_tmp_18_cast_fu_419_p1);
    sensitive << ( tmp_16_fu_415_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_402_p1);
    sensitive << ( tmp_17_fu_398_p2 );

    SC_METHOD(thread_tmp_2_cast_cast7_fu_278_p1);
    sensitive << ( tmp_2_fu_273_p2 );

    SC_METHOD(thread_tmp_2_fu_273_p2);
    sensitive << ( j_mid2_reg_522 );

    SC_METHOD(thread_tmp_3_fu_331_p2);
    sensitive << ( p_shl2_cast_fu_327_p1 );
    sensitive << ( ii_cast2_cast_fu_315_p1 );

    SC_METHOD(thread_tmp_6_fu_476_p2);
    sensitive << ( temp_result_V_1_2_reg_657 );

    SC_METHOD(thread_tmp_7_fu_481_p3);
    sensitive << ( temp_result_V_1_2_reg_657 );
    sensitive << ( tmp_fu_469_p3 );
    sensitive << ( tmp_6_fu_476_p2 );

    SC_METHOD(thread_tmp_9_2_cast_cast_fu_295_p1);
    sensitive << ( j_1_fu_290_p2 );

    SC_METHOD(thread_tmp_9_cast_fu_286_p1);
    sensitive << ( grp_fu_488_p3 );

    SC_METHOD(thread_tmp_fu_469_p3);
    sensitive << ( temp_result_V_1_2_reg_657 );

    SC_METHOD(thread_tmp_mid2_fu_251_p3);
    sensitive << ( i_reg_164 );
    sensitive << ( exitcond_fu_231_p2 );
    sensitive << ( tmp3_fu_245_p2 );

    SC_METHOD(thread_tmp_s_fu_319_p3);
    sensitive << ( ii_phi_fu_202_p4 );

    SC_METHOD(thread_window_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_12_cast_fu_383_p1 );
    sensitive << ( tmp_11_cast_fu_407_p1 );

    SC_METHOD(thread_window_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_13_cast_fu_393_p1 );

    SC_METHOD(thread_window_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_window_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_213_p2 );
    sensitive << ( exitcond3_fu_299_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "differentiate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_address0, "(port)img_address0");
    sc_trace(mVcdFile, img_ce0, "(port)img_ce0");
    sc_trace(mVcdFile, img_q0, "(port)img_q0");
    sc_trace(mVcdFile, img_address1, "(port)img_address1");
    sc_trace(mVcdFile, img_ce1, "(port)img_ce1");
    sc_trace(mVcdFile, img_q1, "(port)img_q1");
    sc_trace(mVcdFile, window_V_address0, "(port)window_V_address0");
    sc_trace(mVcdFile, window_V_ce0, "(port)window_V_ce0");
    sc_trace(mVcdFile, window_V_q0, "(port)window_V_q0");
    sc_trace(mVcdFile, window_V_address1, "(port)window_V_address1");
    sc_trace(mVcdFile, window_V_ce1, "(port)window_V_ce1");
    sc_trace(mVcdFile, window_V_q1, "(port)window_V_q1");
    sc_trace(mVcdFile, res_V_address0, "(port)res_V_address0");
    sc_trace(mVcdFile, res_V_ce0, "(port)res_V_ce0");
    sc_trace(mVcdFile, res_V_we0, "(port)res_V_we0");
    sc_trace(mVcdFile, res_V_d0, "(port)res_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_s_reg_186, "p_s_reg_186");
    sc_trace(mVcdFile, ii_reg_198, "ii_reg_198");
    sc_trace(mVcdFile, reg_209, "reg_209");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter2, "ap_block_state8_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter3, "ap_block_state10_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, exitcond3_reg_565, "exitcond3_reg_565");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter0, "ap_block_state5_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter1, "ap_block_state7_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter2, "ap_block_state9_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter3, "ap_block_state11_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond3_reg_565, "ap_reg_pp0_iter1_exitcond3_reg_565");
    sc_trace(mVcdFile, indvar_flatten_next_fu_219_p2, "indvar_flatten_next_fu_219_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_517, "indvar_flatten_next_reg_517");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_mid2_fu_237_p3, "j_mid2_fu_237_p3");
    sc_trace(mVcdFile, j_mid2_reg_522, "j_mid2_reg_522");
    sc_trace(mVcdFile, exitcond_flatten_fu_213_p2, "exitcond_flatten_fu_213_p2");
    sc_trace(mVcdFile, tmp_mid2_fu_251_p3, "tmp_mid2_fu_251_p3");
    sc_trace(mVcdFile, tmp_mid2_reg_529, "tmp_mid2_reg_529");
    sc_trace(mVcdFile, i_mid2_fu_259_p3, "i_mid2_fu_259_p3");
    sc_trace(mVcdFile, i_mid2_reg_535, "i_mid2_reg_535");
    sc_trace(mVcdFile, j_cast4_cast_fu_270_p1, "j_cast4_cast_fu_270_p1");
    sc_trace(mVcdFile, j_cast4_cast_reg_540, "j_cast4_cast_reg_540");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_2_cast_cast7_fu_278_p1, "tmp_2_cast_cast7_fu_278_p1");
    sc_trace(mVcdFile, tmp_2_cast_cast7_reg_545, "tmp_2_cast_cast7_reg_545");
    sc_trace(mVcdFile, res_V_addr_reg_550, "res_V_addr_reg_550");
    sc_trace(mVcdFile, j_1_fu_290_p2, "j_1_fu_290_p2");
    sc_trace(mVcdFile, j_1_reg_555, "j_1_reg_555");
    sc_trace(mVcdFile, tmp_9_2_cast_cast_fu_295_p1, "tmp_9_2_cast_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp_9_2_cast_cast_reg_560, "tmp_9_2_cast_cast_reg_560");
    sc_trace(mVcdFile, exitcond3_fu_299_p2, "exitcond3_fu_299_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond3_reg_565, "ap_reg_pp0_iter2_exitcond3_reg_565");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond3_reg_565, "ap_reg_pp0_iter3_exitcond3_reg_565");
    sc_trace(mVcdFile, ii_1_fu_305_p2, "ii_1_fu_305_p2");
    sc_trace(mVcdFile, ii_1_reg_569, "ii_1_reg_569");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_3_fu_331_p2, "tmp_3_fu_331_p2");
    sc_trace(mVcdFile, tmp_3_reg_574, "tmp_3_reg_574");
    sc_trace(mVcdFile, tmp_14_fu_366_p2, "tmp_14_fu_366_p2");
    sc_trace(mVcdFile, tmp_14_reg_581, "tmp_14_reg_581");
    sc_trace(mVcdFile, ifzero_fu_372_p2, "ifzero_fu_372_p2");
    sc_trace(mVcdFile, ifzero_reg_588, "ifzero_reg_588");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_ifzero_reg_588, "ap_reg_pp0_iter1_ifzero_reg_588");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_ifzero_reg_588, "ap_reg_pp0_iter2_ifzero_reg_588");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_ifzero_reg_588, "ap_reg_pp0_iter3_ifzero_reg_588");
    sc_trace(mVcdFile, tmp_15_fu_411_p2, "tmp_15_fu_411_p2");
    sc_trace(mVcdFile, tmp_15_reg_612, "tmp_15_reg_612");
    sc_trace(mVcdFile, window_V_load_1_reg_622, "window_V_load_1_reg_622");
    sc_trace(mVcdFile, window_V_load_2_reg_627, "window_V_load_2_reg_627");
    sc_trace(mVcdFile, window_V_load_reg_637, "window_V_load_reg_637");
    sc_trace(mVcdFile, r_V_2_fu_435_p2, "r_V_2_fu_435_p2");
    sc_trace(mVcdFile, r_V_2_reg_642, "r_V_2_reg_642");
    sc_trace(mVcdFile, img_load_reg_647, "img_load_reg_647");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_fu_497_p3, "grp_fu_497_p3");
    sc_trace(mVcdFile, tmp1_reg_652, "tmp1_reg_652");
    sc_trace(mVcdFile, temp_result_V_1_2_fu_463_p2, "temp_result_V_1_2_fu_463_p2");
    sc_trace(mVcdFile, temp_result_V_1_2_reg_657, "temp_result_V_1_2_reg_657");
    sc_trace(mVcdFile, tmp_7_fu_481_p3, "tmp_7_fu_481_p3");
    sc_trace(mVcdFile, tmp_7_reg_665, "tmp_7_reg_665");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, indvar_flatten_reg_153, "indvar_flatten_reg_153");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_reg_164, "i_reg_164");
    sc_trace(mVcdFile, j_reg_175, "j_reg_175");
    sc_trace(mVcdFile, p_s_phi_fu_190_p4, "p_s_phi_fu_190_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00000000, "ap_block_pp0_stage1_flag00000000");
    sc_trace(mVcdFile, ii_phi_fu_202_p4, "ii_phi_fu_202_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, tmp_9_cast_fu_286_p1, "tmp_9_cast_fu_286_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_383_p1, "tmp_12_cast_fu_383_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_393_p1, "tmp_13_cast_fu_393_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_402_p1, "tmp_19_cast_fu_402_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_407_p1, "tmp_11_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_419_p1, "tmp_18_cast_fu_419_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_424_p1, "tmp_17_cast_fu_424_p1");
    sc_trace(mVcdFile, exitcond_fu_231_p2, "exitcond_fu_231_p2");
    sc_trace(mVcdFile, tmp3_fu_245_p2, "tmp3_fu_245_p2");
    sc_trace(mVcdFile, i_1_fu_225_p2, "i_1_fu_225_p2");
    sc_trace(mVcdFile, tmp_2_fu_273_p2, "tmp_2_fu_273_p2");
    sc_trace(mVcdFile, grp_fu_488_p3, "grp_fu_488_p3");
    sc_trace(mVcdFile, tmp_s_fu_319_p3, "tmp_s_fu_319_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_327_p1, "p_shl2_cast_fu_327_p1");
    sc_trace(mVcdFile, ii_cast2_cast_fu_315_p1, "ii_cast2_cast_fu_315_p1");
    sc_trace(mVcdFile, ii_cast3_fu_311_p1, "ii_cast3_fu_311_p1");
    sc_trace(mVcdFile, sum_fu_337_p2, "sum_fu_337_p2");
    sc_trace(mVcdFile, tmp_12_fu_342_p3, "tmp_12_fu_342_p3");
    sc_trace(mVcdFile, tmp_13_fu_354_p3, "tmp_13_fu_354_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_350_p1, "p_shl_cast_fu_350_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_362_p1, "p_shl1_cast_fu_362_p1");
    sc_trace(mVcdFile, tmp_10_fu_378_p2, "tmp_10_fu_378_p2");
    sc_trace(mVcdFile, tmp_11_fu_388_p2, "tmp_11_fu_388_p2");
    sc_trace(mVcdFile, tmp_17_fu_398_p2, "tmp_17_fu_398_p2");
    sc_trace(mVcdFile, tmp_16_fu_415_p2, "tmp_16_fu_415_p2");
    sc_trace(mVcdFile, r_V_2_fu_435_p0, "r_V_2_fu_435_p0");
    sc_trace(mVcdFile, r_V_2_fu_435_p1, "r_V_2_fu_435_p1");
    sc_trace(mVcdFile, grp_fu_505_p3, "grp_fu_505_p3");
    sc_trace(mVcdFile, p_cast_fu_460_p1, "p_cast_fu_460_p1");
    sc_trace(mVcdFile, tmp_fu_469_p3, "tmp_fu_469_p3");
    sc_trace(mVcdFile, tmp_6_fu_476_p2, "tmp_6_fu_476_p2");
    sc_trace(mVcdFile, grp_fu_488_p0, "grp_fu_488_p0");
    sc_trace(mVcdFile, grp_fu_488_p1, "grp_fu_488_p1");
    sc_trace(mVcdFile, grp_fu_488_p2, "grp_fu_488_p2");
    sc_trace(mVcdFile, grp_fu_497_p1, "grp_fu_497_p1");
    sc_trace(mVcdFile, grp_fu_505_p1, "grp_fu_505_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_488_p00, "grp_fu_488_p00");
    sc_trace(mVcdFile, grp_fu_488_p20, "grp_fu_488_p20");
    sc_trace(mVcdFile, grp_fu_497_p10, "grp_fu_497_p10");
    sc_trace(mVcdFile, grp_fu_505_p10, "grp_fu_505_p10");
    sc_trace(mVcdFile, r_V_2_fu_435_p10, "r_V_2_fu_435_p10");
#endif

    }
    mHdltvinHandle.open("differentiate.hdltvin.dat");
    mHdltvoutHandle.open("differentiate.hdltvout.dat");
}

differentiate::~differentiate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete differentiate_macbkb_U0;
    delete differentiate_maccud_U1;
    delete differentiate_macdEe_U2;
}

void differentiate::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_reg_164 = i_mid2_reg_535.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_164 = ap_const_lv6_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond3_reg_565.read(), ap_const_lv1_0))) {
        ii_reg_198 = ii_1_reg_569.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ii_reg_198 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        indvar_flatten_reg_153 = indvar_flatten_next_reg_517.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_153 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_reg_175 = j_1_reg_555.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_175 = ap_const_lv6_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond3_reg_565.read()))) {
        p_s_reg_186 = temp_result_V_1_2_reg_657.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_s_reg_186 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond3_reg_565 = exitcond3_reg_565.read();
        ap_reg_pp0_iter1_ifzero_reg_588 = ifzero_reg_588.read();
        ap_reg_pp0_iter2_exitcond3_reg_565 = ap_reg_pp0_iter1_exitcond3_reg_565.read();
        ap_reg_pp0_iter2_ifzero_reg_588 = ap_reg_pp0_iter1_ifzero_reg_588.read();
        ap_reg_pp0_iter3_exitcond3_reg_565 = ap_reg_pp0_iter2_exitcond3_reg_565.read();
        ap_reg_pp0_iter3_ifzero_reg_588 = ap_reg_pp0_iter2_ifzero_reg_588.read();
        exitcond3_reg_565 = exitcond3_fu_299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_213_p2.read()))) {
        i_mid2_reg_535 = i_mid2_fu_259_p3.read();
        j_mid2_reg_522 = j_mid2_fu_237_p3.read();
        tmp_mid2_reg_529 = tmp_mid2_fu_251_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_299_p2.read()))) {
        ifzero_reg_588 = ifzero_fu_372_p2.read();
        tmp_14_reg_581 = tmp_14_fu_366_p2.read();
        tmp_3_reg_574 = tmp_3_fu_331_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ii_1_reg_569 = ii_1_fu_305_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_565.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        img_load_reg_647 = img_q1.read();
        tmp1_reg_652 = grp_fu_497_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_next_reg_517 = indvar_flatten_next_fu_219_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_555 = j_1_fu_290_p2.read();
        j_cast4_cast_reg_540 = j_cast4_cast_fu_270_p1.read();
        res_V_addr_reg_550 =  (sc_lv<12>) (tmp_9_cast_fu_286_p1.read());
        tmp_2_cast_cast7_reg_545 = tmp_2_cast_cast7_fu_278_p1.read();
        tmp_9_2_cast_cast_reg_560 = tmp_9_2_cast_cast_fu_295_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_565.read()))) {
        r_V_2_reg_642 = r_V_2_fu_435_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_565.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_565.read())))) {
        reg_209 = img_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond3_reg_565.read()))) {
        temp_result_V_1_2_reg_657 = temp_result_V_1_2_fu_463_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_565.read(), ap_const_lv1_0))) {
        tmp_15_reg_612 = tmp_15_fu_411_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter2_ifzero_reg_588.read(), ap_const_lv1_1))) {
        tmp_7_reg_665 = tmp_7_fu_481_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_565.read(), ap_const_lv1_0))) {
        window_V_load_1_reg_622 = window_V_q0.read();
        window_V_load_2_reg_627 = window_V_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond3_reg_565.read()))) {
        window_V_load_reg_637 = window_V_q0.read();
    }
}

void differentiate::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void differentiate::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[4];
}

void differentiate::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void differentiate::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[5];
}

void differentiate::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void differentiate::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void differentiate::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage1_flag00000000() {
    ap_block_pp0_stage1_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state10_pp0_stage0_iter3() {
    ap_block_state10_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state11_pp0_stage1_iter3() {
    ap_block_state11_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state5_pp0_stage1_iter0() {
    ap_block_state5_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state7_pp0_stage1_iter1() {
    ap_block_state7_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state8_pp0_stage0_iter2() {
    ap_block_state8_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_block_state9_pp0_stage1_iter2() {
    ap_block_state9_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void differentiate::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond3_fu_299_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void differentiate::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_213_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void differentiate::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void differentiate::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void differentiate::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void differentiate::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_213_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void differentiate::thread_exitcond3_fu_299_p2() {
    exitcond3_fu_299_p2 = (!ii_phi_fu_202_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ii_phi_fu_202_p4.read() == ap_const_lv2_3);
}

void differentiate::thread_exitcond_flatten_fu_213_p2() {
    exitcond_flatten_fu_213_p2 = (!indvar_flatten_reg_153.read().is_01() || !ap_const_lv12_B24.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_153.read() == ap_const_lv12_B24);
}

void differentiate::thread_exitcond_fu_231_p2() {
    exitcond_fu_231_p2 = (!j_reg_175.read().is_01() || !ap_const_lv6_2F.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_175.read() == ap_const_lv6_2F);
}

void differentiate::thread_grp_fu_488_p0() {
    grp_fu_488_p0 =  (sc_lv<6>) (grp_fu_488_p00.read());
}

void differentiate::thread_grp_fu_488_p00() {
    grp_fu_488_p00 = esl_zext<12,6>(tmp_mid2_reg_529.read());
}

void differentiate::thread_grp_fu_488_p1() {
    grp_fu_488_p1 =  (sc_lv<7>) (ap_const_lv12_2E);
}

void differentiate::thread_grp_fu_488_p2() {
    grp_fu_488_p2 =  (sc_lv<6>) (grp_fu_488_p20.read());
}

void differentiate::thread_grp_fu_488_p20() {
    grp_fu_488_p20 = esl_zext<12,6>(tmp_2_fu_273_p2.read());
}

void differentiate::thread_grp_fu_497_p1() {
    grp_fu_497_p1 =  (sc_lv<8>) (grp_fu_497_p10.read());
}

void differentiate::thread_grp_fu_497_p10() {
    grp_fu_497_p10 = esl_zext<11,8>(reg_209.read());
}

void differentiate::thread_grp_fu_505_p1() {
    grp_fu_505_p1 =  (sc_lv<8>) (grp_fu_505_p10.read());
}

void differentiate::thread_grp_fu_505_p10() {
    grp_fu_505_p10 = esl_zext<11,8>(img_load_reg_647.read());
}

void differentiate::thread_i_1_fu_225_p2() {
    i_1_fu_225_p2 = (!i_reg_164.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_164.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void differentiate::thread_i_mid2_fu_259_p3() {
    i_mid2_fu_259_p3 = (!exitcond_fu_231_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_231_p2.read()[0].to_bool())? i_1_fu_225_p2.read(): i_reg_164.read());
}

void differentiate::thread_ifzero_fu_372_p2() {
    ifzero_fu_372_p2 = (!ii_1_fu_305_p2.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ii_1_fu_305_p2.read() == ap_const_lv2_3);
}

void differentiate::thread_ii_1_fu_305_p2() {
    ii_1_fu_305_p2 = (!ii_phi_fu_202_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ii_phi_fu_202_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void differentiate::thread_ii_cast2_cast_fu_315_p1() {
    ii_cast2_cast_fu_315_p1 = esl_zext<5,2>(ii_phi_fu_202_p4.read());
}

void differentiate::thread_ii_cast3_fu_311_p1() {
    ii_cast3_fu_311_p1 = esl_zext<6,2>(ii_phi_fu_202_p4.read());
}

void differentiate::thread_ii_phi_fu_202_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_565.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        ii_phi_fu_202_p4 = ii_1_reg_569.read();
    } else {
        ii_phi_fu_202_p4 = ii_reg_198.read();
    }
}

void differentiate::thread_img_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        img_address0 =  (sc_lv<12>) (tmp_18_cast_fu_419_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        img_address0 =  (sc_lv<12>) (tmp_19_cast_fu_402_p1.read());
    } else {
        img_address0 = "XXXXXXXXXXXX";
    }
}

void differentiate::thread_img_address1() {
    img_address1 =  (sc_lv<12>) (tmp_17_cast_fu_424_p1.read());
}

void differentiate::thread_img_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        img_ce0 = ap_const_logic_1;
    } else {
        img_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_img_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0))) {
        img_ce1 = ap_const_logic_1;
    } else {
        img_ce1 = ap_const_logic_0;
    }
}

void differentiate::thread_indvar_flatten_next_fu_219_p2() {
    indvar_flatten_next_fu_219_p2 = (!indvar_flatten_reg_153.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(indvar_flatten_reg_153.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void differentiate::thread_j_1_fu_290_p2() {
    j_1_fu_290_p2 = (!j_mid2_reg_522.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_mid2_reg_522.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void differentiate::thread_j_cast4_cast_fu_270_p1() {
    j_cast4_cast_fu_270_p1 = esl_zext<13,6>(j_mid2_reg_522.read());
}

void differentiate::thread_j_mid2_fu_237_p3() {
    j_mid2_fu_237_p3 = (!exitcond_fu_231_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_231_p2.read()[0].to_bool())? ap_const_lv6_1: j_reg_175.read());
}

void differentiate::thread_p_cast_fu_460_p1() {
    p_cast_fu_460_p1 = esl_sext<15,13>(grp_fu_505_p3.read());
}

void differentiate::thread_p_s_phi_fu_190_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond3_reg_565.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        p_s_phi_fu_190_p4 = temp_result_V_1_2_reg_657.read();
    } else {
        p_s_phi_fu_190_p4 = p_s_reg_186.read();
    }
}

void differentiate::thread_p_shl1_cast_fu_362_p1() {
    p_shl1_cast_fu_362_p1 = esl_zext<13,10>(tmp_13_fu_354_p3.read());
}

void differentiate::thread_p_shl2_cast_fu_327_p1() {
    p_shl2_cast_fu_327_p1 = esl_zext<5,4>(tmp_s_fu_319_p3.read());
}

void differentiate::thread_p_shl_cast_fu_350_p1() {
    p_shl_cast_fu_350_p1 = esl_zext<13,12>(tmp_12_fu_342_p3.read());
}

void differentiate::thread_r_V_2_fu_435_p0() {
    r_V_2_fu_435_p0 = window_V_load_2_reg_627.read();
}

void differentiate::thread_r_V_2_fu_435_p1() {
    r_V_2_fu_435_p1 =  (sc_lv<8>) (r_V_2_fu_435_p10.read());
}

void differentiate::thread_r_V_2_fu_435_p10() {
    r_V_2_fu_435_p10 = esl_zext<11,8>(reg_209.read());
}

void differentiate::thread_r_V_2_fu_435_p2() {
    r_V_2_fu_435_p2 = (!r_V_2_fu_435_p0.read().is_01() || !r_V_2_fu_435_p1.read().is_01())? sc_lv<11>(): sc_bigint<3>(r_V_2_fu_435_p0.read()) * sc_biguint<8>(r_V_2_fu_435_p1.read());
}

void differentiate::thread_res_V_address0() {
    res_V_address0 = res_V_addr_reg_550.read();
}

void differentiate::thread_res_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        res_V_ce0 = ap_const_logic_1;
    } else {
        res_V_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_res_V_d0() {
    res_V_d0 = tmp_7_reg_665.read();
}

void differentiate::thread_res_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter3_ifzero_reg_588.read(), ap_const_lv1_1))) {
        res_V_we0 = ap_const_logic_1;
    } else {
        res_V_we0 = ap_const_logic_0;
    }
}

void differentiate::thread_sum_fu_337_p2() {
    sum_fu_337_p2 = (!tmp_mid2_reg_529.read().is_01() || !ii_cast3_fu_311_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_mid2_reg_529.read()) + sc_biguint<6>(ii_cast3_fu_311_p1.read()));
}

void differentiate::thread_temp_result_V_1_2_fu_463_p2() {
    temp_result_V_1_2_fu_463_p2 = (!p_cast_fu_460_p1.read().is_01() || !p_s_phi_fu_190_p4.read().is_01())? sc_lv<15>(): (sc_bigint<15>(p_cast_fu_460_p1.read()) + sc_biguint<15>(p_s_phi_fu_190_p4.read()));
}

void differentiate::thread_tmp3_fu_245_p2() {
    tmp3_fu_245_p2 = (!i_reg_164.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_164.read()) + sc_bigint<6>(ap_const_lv6_3F));
}

void differentiate::thread_tmp_10_fu_378_p2() {
    tmp_10_fu_378_p2 = (!tmp_3_reg_574.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_574.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void differentiate::thread_tmp_11_cast_fu_407_p1() {
    tmp_11_cast_fu_407_p1 = esl_sext<32,5>(tmp_3_reg_574.read());
}

void differentiate::thread_tmp_11_fu_388_p2() {
    tmp_11_fu_388_p2 = (!tmp_3_reg_574.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_574.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void differentiate::thread_tmp_12_cast_fu_383_p1() {
    tmp_12_cast_fu_383_p1 = esl_sext<32,5>(tmp_10_fu_378_p2.read());
}

void differentiate::thread_tmp_12_fu_342_p3() {
    tmp_12_fu_342_p3 = esl_concat<6,6>(sum_fu_337_p2.read(), ap_const_lv6_0);
}

void differentiate::thread_tmp_13_cast_fu_393_p1() {
    tmp_13_cast_fu_393_p1 = esl_sext<32,5>(tmp_11_fu_388_p2.read());
}

void differentiate::thread_tmp_13_fu_354_p3() {
    tmp_13_fu_354_p3 = esl_concat<6,4>(sum_fu_337_p2.read(), ap_const_lv4_0);
}

void differentiate::thread_tmp_14_fu_366_p2() {
    tmp_14_fu_366_p2 = (!p_shl_cast_fu_350_p1.read().is_01() || !p_shl1_cast_fu_362_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl_cast_fu_350_p1.read()) - sc_biguint<13>(p_shl1_cast_fu_362_p1.read()));
}

void differentiate::thread_tmp_15_fu_411_p2() {
    tmp_15_fu_411_p2 = (!tmp_14_reg_581.read().is_01() || !tmp_2_cast_cast7_reg_545.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_14_reg_581.read()) + sc_biguint<13>(tmp_2_cast_cast7_reg_545.read()));
}

void differentiate::thread_tmp_16_fu_415_p2() {
    tmp_16_fu_415_p2 = (!tmp_14_reg_581.read().is_01() || !j_cast4_cast_reg_540.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_14_reg_581.read()) + sc_biguint<13>(j_cast4_cast_reg_540.read()));
}

void differentiate::thread_tmp_17_cast_fu_424_p1() {
    tmp_17_cast_fu_424_p1 = esl_sext<32,13>(tmp_15_reg_612.read());
}

void differentiate::thread_tmp_17_fu_398_p2() {
    tmp_17_fu_398_p2 = (!tmp_14_reg_581.read().is_01() || !tmp_9_2_cast_cast_reg_560.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_14_reg_581.read()) + sc_biguint<13>(tmp_9_2_cast_cast_reg_560.read()));
}

void differentiate::thread_tmp_18_cast_fu_419_p1() {
    tmp_18_cast_fu_419_p1 = esl_sext<32,13>(tmp_16_fu_415_p2.read());
}

void differentiate::thread_tmp_19_cast_fu_402_p1() {
    tmp_19_cast_fu_402_p1 = esl_sext<32,13>(tmp_17_fu_398_p2.read());
}

void differentiate::thread_tmp_2_cast_cast7_fu_278_p1() {
    tmp_2_cast_cast7_fu_278_p1 = esl_zext<13,6>(tmp_2_fu_273_p2.read());
}

void differentiate::thread_tmp_2_fu_273_p2() {
    tmp_2_fu_273_p2 = (!j_mid2_reg_522.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(j_mid2_reg_522.read()) + sc_bigint<6>(ap_const_lv6_3F));
}

void differentiate::thread_tmp_3_fu_331_p2() {
    tmp_3_fu_331_p2 = (!p_shl2_cast_fu_327_p1.read().is_01() || !ii_cast2_cast_fu_315_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl2_cast_fu_327_p1.read()) - sc_biguint<5>(ii_cast2_cast_fu_315_p1.read()));
}

void differentiate::thread_tmp_6_fu_476_p2() {
    tmp_6_fu_476_p2 = (!ap_const_lv15_0.is_01() || !temp_result_V_1_2_reg_657.read().is_01())? sc_lv<15>(): (sc_biguint<15>(ap_const_lv15_0) - sc_biguint<15>(temp_result_V_1_2_reg_657.read()));
}

void differentiate::thread_tmp_7_fu_481_p3() {
    tmp_7_fu_481_p3 = (!tmp_fu_469_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_fu_469_p3.read()[0].to_bool())? tmp_6_fu_476_p2.read(): temp_result_V_1_2_reg_657.read());
}

void differentiate::thread_tmp_9_2_cast_cast_fu_295_p1() {
    tmp_9_2_cast_cast_fu_295_p1 = esl_zext<13,6>(j_1_fu_290_p2.read());
}

void differentiate::thread_tmp_9_cast_fu_286_p1() {
    tmp_9_cast_fu_286_p1 = esl_zext<32,12>(grp_fu_488_p3.read());
}

void differentiate::thread_tmp_fu_469_p3() {
    tmp_fu_469_p3 = temp_result_V_1_2_reg_657.read().range(14, 14);
}

void differentiate::thread_tmp_mid2_fu_251_p3() {
    tmp_mid2_fu_251_p3 = (!exitcond_fu_231_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_231_p2.read()[0].to_bool())? i_reg_164.read(): tmp3_fu_245_p2.read());
}

void differentiate::thread_tmp_s_fu_319_p3() {
    tmp_s_fu_319_p3 = esl_concat<2,2>(ii_phi_fu_202_p4.read(), ap_const_lv2_0);
}

void differentiate::thread_window_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        window_V_address0 =  (sc_lv<4>) (tmp_11_cast_fu_407_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        window_V_address0 =  (sc_lv<4>) (tmp_12_cast_fu_383_p1.read());
    } else {
        window_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void differentiate::thread_window_V_address1() {
    window_V_address1 =  (sc_lv<4>) (tmp_13_cast_fu_393_p1.read());
}

void differentiate::thread_window_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        window_V_ce0 = ap_const_logic_1;
    } else {
        window_V_ce0 = ap_const_logic_0;
    }
}

void differentiate::thread_window_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        window_V_ce1 = ap_const_logic_1;
    } else {
        window_V_ce1 = ap_const_logic_0;
    }
}

void differentiate::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_213_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_299_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_299_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void differentiate::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_address0\" :  \"" << img_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_ce0\" :  \"" << img_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img_q0\" :  \"" << img_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_address1\" :  \"" << img_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_ce1\" :  \"" << img_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img_q1\" :  \"" << img_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"window_V_address0\" :  \"" << window_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"window_V_ce0\" :  \"" << window_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"window_V_q0\" :  \"" << window_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"window_V_address1\" :  \"" << window_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"window_V_ce1\" :  \"" << window_V_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"window_V_q1\" :  \"" << window_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_address0\" :  \"" << res_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_ce0\" :  \"" << res_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_we0\" :  \"" << res_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_V_d0\" :  \"" << res_V_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

