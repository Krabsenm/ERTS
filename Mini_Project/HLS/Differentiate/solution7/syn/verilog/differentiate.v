// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="differentiate,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.989667,HLS_SYN_LAT=28955,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=1701,HLS_SYN_LUT=1293}" *)

module differentiate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_address0,
        img_ce0,
        img_q0,
        img_address1,
        img_ce1,
        img_q1,
        window_V_address0,
        window_V_ce0,
        window_V_q0,
        window_V_address1,
        window_V_ce1,
        window_V_q1,
        res_V_address0,
        res_V_ce0,
        res_V_we0,
        res_V_d0
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_pp0_stage0 = 15'd16;
parameter    ap_ST_fsm_pp0_stage1 = 15'd32;
parameter    ap_ST_fsm_pp0_stage2 = 15'd64;
parameter    ap_ST_fsm_pp0_stage3 = 15'd128;
parameter    ap_ST_fsm_pp0_stage4 = 15'd256;
parameter    ap_ST_fsm_pp0_stage5 = 15'd512;
parameter    ap_ST_fsm_pp0_stage6 = 15'd1024;
parameter    ap_ST_fsm_pp0_stage7 = 15'd2048;
parameter    ap_ST_fsm_pp0_stage8 = 15'd4096;
parameter    ap_ST_fsm_pp0_stage9 = 15'd8192;
parameter    ap_ST_fsm_state18 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] img_address0;
output   img_ce0;
input  [7:0] img_q0;
output  [11:0] img_address1;
output   img_ce1;
input  [7:0] img_q1;
output  [3:0] window_V_address0;
output   window_V_ce0;
input  [2:0] window_V_q0;
output  [3:0] window_V_address1;
output   window_V_ce1;
input  [2:0] window_V_q1;
output  [11:0] res_V_address0;
output   res_V_ce0;
output   res_V_we0;
output  [14:0] res_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] img_address0;
reg img_ce0;
reg[11:0] img_address1;
reg img_ce1;
reg[3:0] window_V_address0;
reg window_V_ce0;
reg[3:0] window_V_address1;
reg window_V_ce1;
reg res_V_ce0;
reg res_V_we0;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] j_reg_256;
reg   [2:0] reg_267;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage1_iter0;
wire    ap_block_state16_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_flag00011001;
reg   [0:0] exitcond2_reg_915;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state8_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_flag00011001;
reg   [7:0] reg_271;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state10_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_flag00011001;
reg  signed [2:0] reg_275;
reg   [7:0] reg_280;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state9_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_flag00011001;
reg   [7:0] reg_285;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state7_pp0_stage2_iter0;
wire    ap_block_state17_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_flag00011001;
reg  signed [2:0] reg_289;
wire   [5:0] tmp_fu_300_p2;
reg   [5:0] tmp_reg_872;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_294_p2;
wire    ap_CS_fsm_state3;
wire   [12:0] tmp_9_fu_339_p2;
reg   [12:0] tmp_9_reg_884;
wire    ap_CS_fsm_state4;
wire   [12:0] tmp_11_fu_367_p2;
reg   [12:0] tmp_11_reg_891;
wire   [11:0] grp_fu_309_p2;
reg   [11:0] tmp_12_reg_898;
wire   [5:0] i_1_fu_373_p2;
reg   [5:0] i_1_reg_903;
wire   [12:0] tmp_15_fu_403_p2;
reg   [12:0] tmp_15_reg_908;
wire   [0:0] exitcond2_fu_409_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state15_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond2_reg_915;
wire   [12:0] j_cast_cast_fu_415_p1;
reg   [12:0] j_cast_cast_reg_919;
wire   [5:0] tmp_2_fu_439_p2;
reg   [5:0] tmp_2_reg_934;
wire   [5:0] j_1_fu_445_p2;
reg   [5:0] j_1_reg_940;
wire   [12:0] tmp_2_cast_cast_fu_454_p1;
reg   [12:0] tmp_2_cast_cast_reg_946;
wire   [11:0] tmp_22_fu_467_p2;
reg   [11:0] tmp_22_reg_957;
reg   [11:0] ap_reg_pp0_iter1_tmp_22_reg_957;
wire   [12:0] j_1_cast_cast_fu_472_p1;
reg   [12:0] j_1_cast_cast_reg_962;
wire   [12:0] tmp_17_fu_485_p2;
reg   [12:0] tmp_17_reg_973;
wire   [12:0] tmp_21_fu_498_p2;
reg   [12:0] tmp_21_reg_983;
wire   [12:0] tmp_25_fu_511_p2;
reg   [12:0] tmp_25_reg_993;
reg   [7:0] img_load_2_reg_998;
reg   [2:0] window_V_load_3_reg_1003;
reg   [2:0] window_V_load_5_reg_1008;
wire   [10:0] r_V_fu_527_p2;
reg  signed [10:0] r_V_reg_1018;
reg   [7:0] img_load_5_reg_1028;
wire   [10:0] r_V_2_1_fu_549_p2;
reg   [10:0] r_V_2_1_reg_1038;
reg   [7:0] img_load_8_reg_1043;
reg   [2:0] window_V_load_8_reg_1048;
wire   [10:0] r_V_0_2_fu_573_p2;
reg   [10:0] r_V_0_2_reg_1053;
wire  signed [11:0] grp_fu_808_p3;
reg  signed [11:0] tmp8_reg_1058;
wire   [10:0] r_V_1_fu_586_p2;
reg   [10:0] r_V_1_reg_1064;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state11_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_flag00011001;
wire   [10:0] r_V_1_2_fu_598_p2;
reg  signed [10:0] r_V_1_2_reg_1070;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state12_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_flag00011001;
wire   [10:0] r_V_2_fu_623_p2;
reg   [10:0] r_V_2_reg_1075;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state13_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_flag00011001;
wire  signed [11:0] grp_fu_816_p3;
reg  signed [11:0] tmp1_reg_1081;
wire   [10:0] r_V_2_2_fu_635_p2;
reg   [10:0] r_V_2_2_reg_1087;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state14_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_flag00011001;
wire   [12:0] tmp7_fu_675_p2;
reg   [12:0] tmp7_reg_1092;
wire   [13:0] tmp4_fu_704_p2;
reg   [13:0] tmp4_reg_1097;
wire   [12:0] tmp10_fu_723_p2;
reg   [12:0] tmp10_reg_1102;
wire   [13:0] tmp14_fu_752_p2;
reg   [13:0] tmp14_reg_1107;
wire   [14:0] tmp_6_fu_796_p3;
reg   [14:0] tmp_6_reg_1112;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage9_flag00011011;
wire    ap_block_pp0_stage2_flag00011011;
reg   [5:0] i_reg_244;
wire    ap_CS_fsm_state18;
reg   [5:0] j_phi_fu_260_p4;
wire    ap_block_pp0_stage0_flag00000000;
wire  signed [31:0] tmp_17_cast_fu_424_p1;
wire  signed [31:0] tmp_19_cast_fu_434_p1;
wire  signed [31:0] tmp_20_cast_fu_462_p1;
wire    ap_block_pp0_stage1_flag00000000;
wire  signed [31:0] tmp_24_cast_fu_480_p1;
wire  signed [31:0] tmp_21_cast_fu_493_p1;
wire    ap_block_pp0_stage2_flag00000000;
wire  signed [31:0] tmp_25_cast_fu_506_p1;
wire  signed [31:0] tmp_22_cast_fu_515_p1;
wire    ap_block_pp0_stage3_flag00000000;
wire  signed [31:0] tmp_26_cast_fu_533_p1;
wire  signed [31:0] tmp_18_cast_fu_537_p1;
wire    ap_block_pp0_stage4_flag00000000;
wire   [31:0] tmp_23_cast_fu_804_p1;
wire   [5:0] grp_fu_309_p0;
wire   [6:0] grp_fu_309_p1;
wire   [11:0] tmp_7_fu_315_p3;
wire   [9:0] tmp_8_fu_327_p3;
wire   [12:0] p_shl4_cast_fu_323_p1;
wire   [12:0] p_shl5_cast_fu_335_p1;
wire   [11:0] tmp_3_fu_345_p3;
wire   [9:0] tmp_10_fu_356_p3;
wire   [12:0] p_shl2_cast_fu_352_p1;
wire   [12:0] p_shl3_cast_fu_363_p1;
wire   [11:0] tmp_13_fu_379_p3;
wire   [9:0] tmp_14_fu_391_p3;
wire   [12:0] p_shl_cast_fu_387_p1;
wire   [12:0] p_shl1_cast_fu_399_p1;
wire   [12:0] tmp_16_fu_419_p2;
wire   [12:0] tmp_18_fu_429_p2;
wire   [12:0] tmp_19_fu_457_p2;
wire   [11:0] tmp_2_cast_cast6_fu_451_p1;
wire   [12:0] tmp_23_fu_475_p2;
wire   [12:0] tmp_20_fu_489_p2;
wire   [12:0] tmp_24_fu_502_p2;
wire  signed [2:0] r_V_fu_527_p0;
wire   [7:0] r_V_fu_527_p1;
wire  signed [2:0] r_V_2_1_fu_549_p0;
wire   [7:0] r_V_2_1_fu_549_p1;
wire    ap_block_pp0_stage5_flag00000000;
wire  signed [2:0] r_V_0_2_fu_573_p0;
wire   [7:0] r_V_0_2_fu_573_p1;
wire    ap_block_pp0_stage6_flag00000000;
wire  signed [2:0] r_V_1_fu_586_p0;
wire   [7:0] r_V_1_fu_586_p1;
wire    ap_block_pp0_stage7_flag00000000;
wire  signed [2:0] r_V_1_2_fu_598_p0;
wire   [7:0] r_V_1_2_fu_598_p1;
wire    ap_block_pp0_stage8_flag00000000;
wire  signed [2:0] r_V_2_fu_623_p0;
wire   [7:0] r_V_2_fu_623_p1;
wire    ap_block_pp0_stage9_flag00000000;
wire  signed [2:0] r_V_2_2_fu_635_p0;
wire   [7:0] r_V_2_2_fu_635_p1;
wire  signed [11:0] tmp_1_cast_fu_644_p1;
wire  signed [11:0] tmp_0_2_cast_fu_641_p1;
wire   [11:0] tmp9_fu_665_p2;
wire  signed [12:0] tmp8_cast_fu_662_p1;
wire  signed [12:0] tmp9_cast_fu_671_p1;
wire  signed [11:0] tmp_2_2_cast_fu_659_p1;
wire  signed [11:0] tmp_2_1_cast_fu_656_p1;
wire   [11:0] tmp2_fu_684_p2;
wire  signed [12:0] tmp_2_cast_fu_650_p1;
wire  signed [12:0] tmp13_cast_fu_690_p1;
wire   [12:0] tmp3_fu_694_p2;
wire  signed [13:0] tmp11_cast_fu_681_p1;
wire  signed [13:0] tmp12_cast_fu_700_p1;
wire  signed [11:0] tmp_16_cast_fu_653_p1;
wire   [11:0] tmp5_fu_710_p2;
wire  signed [12:0] tmp15_cast_fu_716_p1;
wire  signed [12:0] tmp16_cast_fu_720_p1;
wire   [11:0] tmp12_fu_732_p2;
wire  signed [12:0] tmp_9_cast_fu_647_p1;
wire  signed [12:0] tmp20_cast_fu_738_p1;
wire   [12:0] tmp13_fu_742_p2;
wire  signed [13:0] tmp18_cast_fu_729_p1;
wire  signed [13:0] tmp19_cast_fu_748_p1;
wire  signed [14:0] tmp7_cast_fu_758_p1;
wire  signed [14:0] tmp10_cast_fu_761_p1;
wire   [14:0] temp_result_V_1_2_2_fu_764_p2;
wire  signed [14:0] tmp14_cast_fu_778_p1;
wire  signed [14:0] tmp17_cast_fu_781_p1;
wire   [14:0] tmp_s_fu_784_p2;
wire   [0:0] tmp_26_fu_770_p3;
wire   [14:0] tmp_5_fu_790_p2;
wire   [7:0] grp_fu_808_p1;
wire   [7:0] grp_fu_816_p1;
reg   [14:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_flag00011011;
wire    ap_block_pp0_stage3_flag00011011;
wire    ap_block_pp0_stage4_flag00011011;
wire    ap_block_pp0_stage5_flag00011011;
wire    ap_block_pp0_stage6_flag00011011;
wire    ap_block_pp0_stage7_flag00011011;
wire    ap_block_pp0_stage8_flag00011011;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] grp_fu_309_p00;
wire   [10:0] grp_fu_808_p10;
wire   [10:0] grp_fu_816_p10;
wire   [10:0] r_V_0_2_fu_573_p10;
wire   [10:0] r_V_1_2_fu_598_p10;
wire   [10:0] r_V_1_fu_586_p10;
wire   [10:0] r_V_2_1_fu_549_p10;
wire   [10:0] r_V_2_2_fu_635_p10;
wire   [10:0] r_V_2_fu_623_p10;
wire   [10:0] r_V_fu_527_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

differentiate_mulbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
differentiate_mulbkb_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(grp_fu_309_p1),
    .ce(1'b1),
    .dout(grp_fu_309_p2)
);

differentiate_maccud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
differentiate_maccud_U1(
    .din0(reg_289),
    .din1(grp_fu_808_p1),
    .din2(r_V_reg_1018),
    .dout(grp_fu_808_p3)
);

differentiate_maccud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
differentiate_maccud_U2(
    .din0(reg_275),
    .din1(grp_fu_816_p1),
    .din2(r_V_1_2_reg_1070),
    .dout(grp_fu_816_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state5) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_flag00011011 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state5 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_flag00011011 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_reg_244 <= i_1_reg_903;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_244 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_256 <= j_1_reg_940;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_256 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0))) begin
            reg_275 <= window_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
            reg_275 <= window_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0))) begin
            reg_280 <= img_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
            reg_280 <= img_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0))) begin
            reg_289 <= window_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
            reg_289 <= window_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond2_reg_915 <= exitcond2_reg_915;
        exitcond2_reg_915 <= exitcond2_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_22_reg_957 <= tmp_22_reg_957;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_903 <= i_1_fu_373_p2;
        tmp_11_reg_891[12 : 4] <= tmp_11_fu_367_p2[12 : 4];
        tmp_12_reg_898 <= grp_fu_309_p2;
        tmp_15_reg_908[12 : 4] <= tmp_15_fu_403_p2[12 : 4];
        tmp_9_reg_884[12 : 4] <= tmp_9_fu_339_p2[12 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        img_load_2_reg_998 <= img_q1;
        window_V_load_3_reg_1003 <= window_V_q0;
        window_V_load_5_reg_1008 <= window_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        img_load_5_reg_1028 <= img_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0))) begin
        img_load_8_reg_1043 <= img_q1;
        window_V_load_8_reg_1048 <= window_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (exitcond2_reg_915 == 1'd0))) begin
        j_1_cast_cast_reg_962[5 : 0] <= j_1_cast_cast_fu_472_p1[5 : 0];
        tmp_22_reg_957 <= tmp_22_fu_467_p2;
        tmp_2_cast_cast_reg_946[5 : 0] <= tmp_2_cast_cast_fu_454_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond2_fu_409_p2))) begin
        j_1_reg_940 <= j_1_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond2_fu_409_p2))) begin
        j_cast_cast_reg_919[5 : 0] <= j_cast_cast_fu_415_p1[5 : 0];
        tmp_2_reg_934 <= tmp_2_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0))) begin
        r_V_0_2_reg_1053 <= r_V_0_2_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_flag00011001 == 1'b0))) begin
        r_V_1_2_reg_1070 <= r_V_1_2_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_flag00011001 == 1'b0))) begin
        r_V_1_reg_1064 <= r_V_1_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0))) begin
        r_V_2_1_reg_1038 <= r_V_2_1_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_flag00011001 == 1'b0))) begin
        r_V_2_2_reg_1087 <= r_V_2_2_fu_635_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00011001 == 1'b0))) begin
        r_V_2_reg_1075 <= r_V_2_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0))) begin
        r_V_reg_1018 <= r_V_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (exitcond2_reg_915 == 1'd0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)))) begin
        reg_267 <= window_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (exitcond2_reg_915 == 1'd0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0)))) begin
        reg_271 <= img_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)))) begin
        reg_285 <= img_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        tmp10_reg_1102 <= tmp10_fu_723_p2;
        tmp14_reg_1107 <= tmp14_fu_752_p2;
        tmp4_reg_1097 <= tmp4_fu_704_p2;
        tmp7_reg_1092 <= tmp7_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_flag00011001 == 1'b0))) begin
        tmp1_reg_1081 <= grp_fu_816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0))) begin
        tmp8_reg_1058 <= grp_fu_808_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0))) begin
        tmp_17_reg_973 <= tmp_17_fu_485_p2;
        tmp_21_reg_983 <= tmp_21_fu_498_p2;
        tmp_25_reg_993 <= tmp_25_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond2_reg_915))) begin
        tmp_6_reg_1112 <= tmp_6_fu_796_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond1_fu_294_p2))) begin
        tmp_reg_872 <= tmp_fu_300_p2;
    end
end

always @ (*) begin
    if ((exitcond2_fu_409_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_294_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_294_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00000000 == 1'b0))) begin
            img_address0 = tmp_18_cast_fu_537_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0))) begin
            img_address0 = tmp_22_cast_fu_515_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
            img_address0 = tmp_21_cast_fu_493_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            img_address0 = tmp_20_cast_fu_462_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            img_address0 = tmp_17_cast_fu_424_p1;
        end else begin
            img_address0 = 'bx;
        end
    end else begin
        img_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0))) begin
            img_address1 = tmp_26_cast_fu_533_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
            img_address1 = tmp_25_cast_fu_506_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            img_address1 = tmp_24_cast_fu_480_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            img_address1 = tmp_19_cast_fu_434_p1;
        end else begin
            img_address1 = 'bx;
        end
    end else begin
        img_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)))) begin
        img_ce0 = 1'b1;
    end else begin
        img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)))) begin
        img_ce1 = 1'b1;
    end else begin
        img_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_915 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        j_phi_fu_260_p4 = j_1_reg_940;
    end else begin
        j_phi_fu_260_p4 = j_reg_256;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        res_V_ce0 = 1'b1;
    end else begin
        res_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond2_reg_915) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        res_V_we0 = 1'b1;
    end else begin
        res_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00000000 == 1'b0))) begin
            window_V_address0 = 32'd4;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0))) begin
            window_V_address0 = 32'd1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
            window_V_address0 = 32'd6;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            window_V_address0 = 32'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            window_V_address0 = 32'd0;
        end else begin
            window_V_address0 = 'bx;
        end
    end else begin
        window_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00000000 == 1'b0))) begin
            window_V_address1 = 32'd8;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00000000 == 1'b0))) begin
            window_V_address1 = 32'd7;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            window_V_address1 = 32'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            window_V_address1 = 32'd2;
        end else begin
            window_V_address1 = 'bx;
        end
    end else begin
        window_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)))) begin
        window_V_ce0 = 1'b1;
    end else begin
        window_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0)))) begin
        window_V_ce1 = 1'b1;
    end else begin
        window_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_294_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond2_fu_409_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond2_fu_409_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_block_pp0_stage2_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((ap_block_pp0_stage7_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((ap_block_pp0_stage8_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((ap_block_pp0_stage9_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond1_fu_294_p2 = ((i_reg_244 == 6'd63) ? 1'b1 : 1'b0);

assign exitcond2_fu_409_p2 = ((j_phi_fu_260_p4 == 6'd47) ? 1'b1 : 1'b0);

assign grp_fu_309_p0 = grp_fu_309_p00;

assign grp_fu_309_p00 = tmp_reg_872;

assign grp_fu_309_p1 = 12'd46;

assign grp_fu_808_p1 = grp_fu_808_p10;

assign grp_fu_808_p10 = reg_271;

assign grp_fu_816_p1 = grp_fu_816_p10;

assign grp_fu_816_p10 = reg_271;

assign i_1_fu_373_p2 = (i_reg_244 + 6'd1);

assign j_1_cast_cast_fu_472_p1 = j_1_reg_940;

assign j_1_fu_445_p2 = (j_phi_fu_260_p4 + 6'd1);

assign j_cast_cast_fu_415_p1 = j_phi_fu_260_p4;

assign p_shl1_cast_fu_399_p1 = tmp_14_fu_391_p3;

assign p_shl2_cast_fu_352_p1 = tmp_3_fu_345_p3;

assign p_shl3_cast_fu_363_p1 = tmp_10_fu_356_p3;

assign p_shl4_cast_fu_323_p1 = tmp_7_fu_315_p3;

assign p_shl5_cast_fu_335_p1 = tmp_8_fu_327_p3;

assign p_shl_cast_fu_387_p1 = tmp_13_fu_379_p3;

assign r_V_0_2_fu_573_p0 = reg_275;

assign r_V_0_2_fu_573_p1 = r_V_0_2_fu_573_p10;

assign r_V_0_2_fu_573_p10 = img_load_2_reg_998;

assign r_V_0_2_fu_573_p2 = ($signed(r_V_0_2_fu_573_p0) * $signed({{1'b0}, {r_V_0_2_fu_573_p1}}));

assign r_V_1_2_fu_598_p0 = window_V_load_5_reg_1008;

assign r_V_1_2_fu_598_p1 = r_V_1_2_fu_598_p10;

assign r_V_1_2_fu_598_p10 = img_load_5_reg_1028;

assign r_V_1_2_fu_598_p2 = ($signed(r_V_1_2_fu_598_p0) * $signed({{1'b0}, {r_V_1_2_fu_598_p1}}));

assign r_V_1_fu_586_p0 = window_V_load_3_reg_1003;

assign r_V_1_fu_586_p1 = r_V_1_fu_586_p10;

assign r_V_1_fu_586_p10 = reg_285;

assign r_V_1_fu_586_p2 = ($signed(r_V_1_fu_586_p0) * $signed({{1'b0}, {r_V_1_fu_586_p1}}));

assign r_V_2_1_fu_549_p0 = reg_289;

assign r_V_2_1_fu_549_p1 = r_V_2_1_fu_549_p10;

assign r_V_2_1_fu_549_p10 = reg_280;

assign r_V_2_1_fu_549_p2 = ($signed(r_V_2_1_fu_549_p0) * $signed({{1'b0}, {r_V_2_1_fu_549_p1}}));

assign r_V_2_2_fu_635_p0 = window_V_load_8_reg_1048;

assign r_V_2_2_fu_635_p1 = r_V_2_2_fu_635_p10;

assign r_V_2_2_fu_635_p10 = img_load_8_reg_1043;

assign r_V_2_2_fu_635_p2 = ($signed(r_V_2_2_fu_635_p0) * $signed({{1'b0}, {r_V_2_2_fu_635_p1}}));

assign r_V_2_fu_623_p0 = reg_267;

assign r_V_2_fu_623_p1 = r_V_2_fu_623_p10;

assign r_V_2_fu_623_p10 = reg_280;

assign r_V_2_fu_623_p2 = ($signed(r_V_2_fu_623_p0) * $signed({{1'b0}, {r_V_2_fu_623_p1}}));

assign r_V_fu_527_p0 = reg_267;

assign r_V_fu_527_p1 = r_V_fu_527_p10;

assign r_V_fu_527_p10 = reg_285;

assign r_V_fu_527_p2 = ($signed(r_V_fu_527_p0) * $signed({{1'b0}, {r_V_fu_527_p1}}));

assign res_V_address0 = tmp_23_cast_fu_804_p1;

assign res_V_d0 = tmp_6_reg_1112;

assign temp_result_V_1_2_2_fu_764_p2 = ($signed(tmp7_cast_fu_758_p1) + $signed(tmp10_cast_fu_761_p1));

assign tmp10_cast_fu_761_p1 = $signed(tmp4_reg_1097);

assign tmp10_fu_723_p2 = ($signed(tmp15_cast_fu_716_p1) + $signed(tmp16_cast_fu_720_p1));

assign tmp11_cast_fu_681_p1 = tmp1_reg_1081;

assign tmp12_cast_fu_700_p1 = $signed(tmp3_fu_694_p2);

assign tmp12_fu_732_p2 = ($signed(tmp_2_2_cast_fu_659_p1) + $signed(tmp_0_2_cast_fu_641_p1));

assign tmp13_cast_fu_690_p1 = $signed(tmp2_fu_684_p2);

assign tmp13_fu_742_p2 = ($signed(tmp_9_cast_fu_647_p1) + $signed(tmp20_cast_fu_738_p1));

assign tmp14_cast_fu_778_p1 = $signed(tmp10_reg_1102);

assign tmp14_fu_752_p2 = ($signed(tmp18_cast_fu_729_p1) + $signed(tmp19_cast_fu_748_p1));

assign tmp15_cast_fu_716_p1 = $signed(tmp5_fu_710_p2);

assign tmp16_cast_fu_720_p1 = tmp1_reg_1081;

assign tmp17_cast_fu_781_p1 = $signed(tmp14_reg_1107);

assign tmp18_cast_fu_729_p1 = tmp8_reg_1058;

assign tmp19_cast_fu_748_p1 = $signed(tmp13_fu_742_p2);

assign tmp20_cast_fu_738_p1 = $signed(tmp12_fu_732_p2);

assign tmp2_fu_684_p2 = ($signed(tmp_2_2_cast_fu_659_p1) + $signed(tmp_2_1_cast_fu_656_p1));

assign tmp3_fu_694_p2 = ($signed(tmp_2_cast_fu_650_p1) + $signed(tmp13_cast_fu_690_p1));

assign tmp4_fu_704_p2 = ($signed(tmp11_cast_fu_681_p1) + $signed(tmp12_cast_fu_700_p1));

assign tmp5_fu_710_p2 = ($signed(tmp_2_1_cast_fu_656_p1) + $signed(tmp_16_cast_fu_653_p1));

assign tmp7_cast_fu_758_p1 = $signed(tmp7_reg_1092);

assign tmp7_fu_675_p2 = ($signed(tmp8_cast_fu_662_p1) + $signed(tmp9_cast_fu_671_p1));

assign tmp8_cast_fu_662_p1 = tmp8_reg_1058;

assign tmp9_cast_fu_671_p1 = $signed(tmp9_fu_665_p2);

assign tmp9_fu_665_p2 = ($signed(tmp_1_cast_fu_644_p1) + $signed(tmp_0_2_cast_fu_641_p1));

assign tmp_0_2_cast_fu_641_p1 = $signed(r_V_0_2_reg_1053);

assign tmp_10_fu_356_p3 = {{tmp_reg_872}, {4'd0}};

assign tmp_11_fu_367_p2 = (p_shl2_cast_fu_352_p1 - p_shl3_cast_fu_363_p1);

assign tmp_13_fu_379_p3 = {{i_1_fu_373_p2}, {6'd0}};

assign tmp_14_fu_391_p3 = {{i_1_fu_373_p2}, {4'd0}};

assign tmp_15_fu_403_p2 = (p_shl_cast_fu_387_p1 - p_shl1_cast_fu_399_p1);

assign tmp_16_cast_fu_653_p1 = $signed(r_V_2_reg_1075);

assign tmp_16_fu_419_p2 = (tmp_11_reg_891 + j_cast_cast_fu_415_p1);

assign tmp_17_cast_fu_424_p1 = $signed(tmp_16_fu_419_p2);

assign tmp_17_fu_485_p2 = (tmp_9_reg_884 + j_cast_cast_reg_919);

assign tmp_18_cast_fu_537_p1 = $signed(tmp_17_reg_973);

assign tmp_18_fu_429_p2 = (tmp_15_reg_908 + j_cast_cast_fu_415_p1);

assign tmp_19_cast_fu_434_p1 = $signed(tmp_18_fu_429_p2);

assign tmp_19_fu_457_p2 = (tmp_11_reg_891 + tmp_2_cast_cast_fu_454_p1);

assign tmp_1_cast_fu_644_p1 = $signed(r_V_1_reg_1064);

assign tmp_20_cast_fu_462_p1 = $signed(tmp_19_fu_457_p2);

assign tmp_20_fu_489_p2 = (tmp_9_reg_884 + tmp_2_cast_cast_reg_946);

assign tmp_21_cast_fu_493_p1 = $signed(tmp_20_fu_489_p2);

assign tmp_21_fu_498_p2 = (tmp_15_reg_908 + tmp_2_cast_cast_reg_946);

assign tmp_22_cast_fu_515_p1 = $signed(tmp_21_reg_983);

assign tmp_22_fu_467_p2 = (tmp_12_reg_898 + tmp_2_cast_cast6_fu_451_p1);

assign tmp_23_cast_fu_804_p1 = ap_reg_pp0_iter1_tmp_22_reg_957;

assign tmp_23_fu_475_p2 = (tmp_11_reg_891 + j_1_cast_cast_fu_472_p1);

assign tmp_24_cast_fu_480_p1 = $signed(tmp_23_fu_475_p2);

assign tmp_24_fu_502_p2 = (tmp_9_reg_884 + j_1_cast_cast_reg_962);

assign tmp_25_cast_fu_506_p1 = $signed(tmp_24_fu_502_p2);

assign tmp_25_fu_511_p2 = (tmp_15_reg_908 + j_1_cast_cast_reg_962);

assign tmp_26_cast_fu_533_p1 = $signed(tmp_25_reg_993);

assign tmp_26_fu_770_p3 = temp_result_V_1_2_2_fu_764_p2[32'd14];

assign tmp_2_1_cast_fu_656_p1 = $signed(r_V_2_1_reg_1038);

assign tmp_2_2_cast_fu_659_p1 = $signed(r_V_2_2_reg_1087);

assign tmp_2_cast_cast6_fu_451_p1 = tmp_2_reg_934;

assign tmp_2_cast_cast_fu_454_p1 = tmp_2_reg_934;

assign tmp_2_cast_fu_650_p1 = $signed(r_V_2_reg_1075);

assign tmp_2_fu_439_p2 = ($signed(j_phi_fu_260_p4) + $signed(6'd63));

assign tmp_3_fu_345_p3 = {{tmp_reg_872}, {6'd0}};

assign tmp_5_fu_790_p2 = (15'd0 - tmp_s_fu_784_p2);

assign tmp_6_fu_796_p3 = ((tmp_26_fu_770_p3[0:0] === 1'b1) ? tmp_5_fu_790_p2 : tmp_s_fu_784_p2);

assign tmp_7_fu_315_p3 = {{i_reg_244}, {6'd0}};

assign tmp_8_fu_327_p3 = {{i_reg_244}, {4'd0}};

assign tmp_9_cast_fu_647_p1 = $signed(r_V_1_reg_1064);

assign tmp_9_fu_339_p2 = (p_shl4_cast_fu_323_p1 - p_shl5_cast_fu_335_p1);

assign tmp_fu_300_p2 = ($signed(i_reg_244) + $signed(6'd63));

assign tmp_s_fu_784_p2 = ($signed(tmp14_cast_fu_778_p1) + $signed(tmp17_cast_fu_781_p1));

always @ (posedge ap_clk) begin
    tmp_9_reg_884[3:0] <= 4'b0000;
    tmp_11_reg_891[3:0] <= 4'b0000;
    tmp_15_reg_908[3:0] <= 4'b0000;
    j_cast_cast_reg_919[12:6] <= 7'b0000000;
    tmp_2_cast_cast_reg_946[12:6] <= 7'b0000000;
    j_1_cast_cast_reg_962[12:6] <= 7'b0000000;
end

endmodule //differentiate
